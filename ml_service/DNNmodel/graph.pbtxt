node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1762
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1762
          }
        }
        tensor_content`@\000\000\200?\000\000``@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000@@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\000A\000\000\240@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\240@\000\000\200@\000\000 @\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000 @\000\000@@\000\000\200@\000\000 @\000\000\000@\000\000@@\000\000\200@\000\000\000@\000\000\000\000\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000\000\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\300@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000\000\000\000\200?\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000\000\000\000\000\200?\000\000\200?\000\000\240@\000\000\000\000\000\000\000\000\000\000@@\000\000\200?\000\000@@\000\000\000@\000\000\240@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\300?\000\000\200@\000\000@@\000\000@@\000\000@@\000\000\000\000\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\240@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\000A\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000@@\000\000\200?\000\000\300@\000\000\000@\000\000\000@\000\000\000@\000\000\300@\000\000@@\000\000\000\000\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\200?\000\000\200@\000\000\000@\000\000\000@\000\000 @\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\000\000\000\000@@\000\000\000\000\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\000A\000\000\200@\000\000\200@\000\000@@\000\000\000@\000\000\200@\000\000\200?\000\000@@\000\000@@\000\000\000\000\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000\200?\000\000\200?\000\000@@\000\000\200@\000\000@@\000\000\200?\000\000\000@\000\000\340@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000\000\000\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000\200?\000\000\300@\000\000\200?\000\000\200?\000\000\000\000\000\000\000\000\000\000\240@\000\000\000\000\000\000\200?\000\000\000@\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000\200?\000\000\240@\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\000A\000\000@@\000\000\200@\000\000@@\000\000\200?\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\200?\000\000\000\000\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\240@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\000\000\000\000\200?\000\000 @\000\000\000@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\300@\000\000@@\000\000\000@\000\000\000\000\000\000\000\000\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000\000\000\000\000\200?\000\000@@\000\000@@\000\000\200@\000\000\200?\000\000\300@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000\000\000\000\000\200@\000\000\240@\000\000\200?\000\000@@\000\000\200@\000\000\200?\000\000\200?\000\000\000@\000\000\240@\000\000\300@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\200@\000\000\000@\000\000\000@\000\000\000A\000\000\000@\000\000\200?\000\000\200@\000\000@@\000\000\200?\000\000@@\000\000@@\000\000\000@\000\000@@\000\000 @\000\000\200?\000\000\240@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\020A\000\000\000@\000\000@@\000\000\000@\000\000\200?\000\000\000@\000\000\240@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000\000\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000`@\000\000\200?\000\000\200?\000\000@@\000\000\300@\000\000@@\000\000@@\000\000\200?\000\000@@\000\000\260@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000`@\000\000\000@\000\000\000\000\000\000@@\000\000`@\000\000@@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000\000A\000\000\000@\000\000@@\000\000\200?\000\000\200@\000\000@@\000\000\240@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000\000\000\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000\200?\000\000\000@\000\000\200A\000\000\200?\000\000\200@\000\000`@\000\000\000@\000\000\000\000\000\000\200?\000\000\000\000\000\000\200?\000\000\200?\000\000p``
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1762
          }
        }
        tensor_content: "\000\200}D\000\200jD\000 UE\000\300/E\000\000\226D\000\220)E\000\000\034D\000\230\212E\000\340\271D\000 \216D\000@\263D\000\000\245D\000\300\375D\000\000eD\000\000\275D\000\300PE\000\200\177D\000\200:D\000@NE\000\300=E\000\2007D\000\360\\E\000P\226E\000\350\276E\000\340\255D\000\340+F\000\300:E\000@\265D\000`\321D\000\000\202D\000\340\350D\000`rE\000@\311D\000\300MD\000\000\264D\000\340\032E\000\000\365D\000H\276E\0000}E\000\200\314D\000@;D\000\000\301D\000@zD\000\000\341D\000\200\354D\000@TD\000\010\202E\000\000\215D\000`\343D\000\300-E\000\000\366C\000\240\314D\000\000\253D\000 \262D\000\000\000\000\000`\215D\000\200\263D\000\200\311D\000\300\017E\000\000(D\000\300sD\000\000\311D\000@\003E\000@\222E\000@\202D\000\340\242D\000\240\327D\000\000\374D\000\000\000\000\000\300\224D\000\220\342E\000\240\371D\000\234\250F\000 !E\000\230\304E\000\020\021E\0000>E\000\300\231D\000`\374D\000\000\315D\000\300\250D\000\300\234D\000p\014E\000\000\000\000\000\200\tE\000@\274D\000\240\332D\000\240\006E\000\2007D\000\200\024E\000\350\202E\000\320\000E\000\3002E\000\200\276D\000\000\300D\000\340\220D\000\200VD\000\240\225D\000@\267D\000\200}D\000@\377D\000\300\247D\000\000\232D\000\360WE\000@\005E\000\000\007D\000\000 E\000 \304D\000@\324D\000`\005E\000\340\373D\000\000\311D\000\200\277D\000\000kD\000\2009D\000\200uE\000\0008D\000@\203D\000\020LE\000 \243D\000@\272D\000\340\264D\000\200;F\000\200\273D\000\300\003E\000x\307E\000\320\017E\000`\206E\000@5E\000\000\204D\000\354\251F\000\200\266D\000\340\333D\000P\372E\000\000rD\000\3002E\000\000\203D\000@\327D\000@\207D\000\200\351D\000\240\036E\000\240\206D\000\300\232D\000\350\312E\000`\360D\000\240\214E\000\340\235E\000\300\036D\0004\002F\000\260DE\000\200\211D\000`\365D\000\200\234E\000 >E\000 \246D\000\360\nE\000\200&D\000\300\247D\000`\006E\000@\246D\000\340\027E\000\200\300D\000\340?E\000 #E\000\240\024E\0000\034E\000 \200D\000@gE\000\000\246D\000\000\246D\000@cD\000@9E\000\000\225D\000\370\261E\000\300\323D\000 UE\000\300nD\000\300\332E\0000\236E\000\000tD\000\240\310D\0000\032E\000\300\313D\000\340\370D\000`\254D\000`\320D\000\240\333D\000\240\365D\000\200\301D\0008\201E\000@\324D\000\200\234D\000\200YE\000\000\204D\000\240\276D\000\260\254E\000x\245E\000\300\032D\000\300\303D\000\300KD\000\000WD\000\340\254D\000\300\363D\000\200\367D\000\300\212D\000\300\200D\000\000\000\000\000\2000D\000@\034E\000\000qD\000\2007D\000\200\233D\000\200\265D\000\000\266D\000\320\022E\000\200\241D\000`\214D\000\000\000\000\000\000\177D\000p\222E\000\300\251D\000\200\235D\000\220\014E\000\000kD\000\000\000\000\000\000\226D\000\000\313D\000\014UF\000 \352D\000 \213D\000@0E\000`\274D\000\300\017E\000\200\257D\000\000_D\000\000\264D\000\000\277D\000@\255D\000`\253D\000\000\250D\000\300ID\000\300\252D\000 \253D\000\240oE\000@\003E\000\340\010E\000\000\214D\000\200PD\000\240\251D\000\000\000\000\000\200\261D\000\300\017E\000\000\214D\000\000\303D\000\000\221D\000`\206D\000\340\215D\000\000\327D\000\200\225D\000\200\242D\000``F\000\240\301D\000\200\357D\000\200VD\000\000\221D\000 \335D\000\200VD\000\210\370E\000\200\301D\000\000\014E\000\000zD\000\000\266C\000\000\000\000\000\200\"E\000\340\tE\000@\265D\000\000HE\0000\002E\000\240\330D\000 \213D\000\000\004D\000\200\325E\000\300\301D\000\240\327D\000\000\234D\000\3003E\000\000\230D\000\0201E\000p!E\000\340\210D\000@\"E\000\300\344D\000 \373D\000\300vD\0000\216F\000\000\310D\000\000\372D\000@\324D\000\240\327D\000\300\235D\000\200\031E\000@\214D\0000;E\000\000\265D\000\240\226E\000 \306D\000\000\306D\000\300\306D\000\200\010E\000\340\215D\000\200\016E\000@\203D\000\000\226D\000 \216D\000\200\350D\000`UE\000\200hD\000\300\235D\000`\222D\000\200\346D\000\000\000\000\000 \354D\000\300JE\000\300\240D\000\200\277D\000 \233D\000\000\271D\000\000\020E\000\000\247D\000@\275D\000\240\226E\000\300\250D\000P\001E\000\300\005E\0000LE\000\300yD\000p[E\000\220\027E\000\000\007E\000\200\355D\000\000*E\000`\217D\000\300\214D\000 \315D\000\200\177D\000@\203D\000@\265E\000\240\302D\000\300\037E\000\000\207D\000\000oD\000\020\000E\000\200\270D\000\200\317D\000\240nE\000\360\027E\000\200\254D\000\000\330D\000x\202F\000\300\271D\000\300\024E\000\000\026E\000`\231D\000\200\322D\000\000\000\000\000\340\314D\000\000\210D\000\200\035E\000\340\006E\000\000\207D\000\340\375D\000\270\230E\000\000vD\000\3002E\000\200}D\000p\001E\000\000_D\000\300\235D\000\240\220D\000\200\335D\000\200zD\000\300\305D\000@<D\000@\377D\000\300=D\000@\323D\000\0003D\000ppE\000\240\245D\000`\266D\000\300\364D\000\000ZD\000\000\214D\000@\223D\000\000\264D\000\000\233D\000\000/E\000`JE\000`\303D\000\210\214E\000\220HE\000\200\227D\000 +E\000\000\270D\000\240\003E\000\000lD\000\000\000\000\000\000{D\000\200@D\000\020%E\000 \177E\000\000\000\000\000\200&E\000\220vE\000\300AE\000\000\276D\000`\257D\000\000nD\000\300\350D\000\200\323D\000\000\250D\000\350\256E\000\300\315D\000\000\257D\000\000\372D\000 \301D\000@^D\000 _E\000 \221D\000 \357D\000\240\001E\000@\331D\000`\250D\000\000\022E\000\340\315E\000`\321D\000\000\000\000\0000rF\000\000wD\000\200\311D\000P\225E\000\340\200D\000\000HD\000\240\227D\000\200\"E\000\000!D\000\000\321D\000\300\301D\000 \245E\000 2E\000\000\245D\000\300\217D\000\000RD\000\000\000\000\000\000zF\000\000\333D\000\000\277D\000\340\316D\000\000\245D\000p\016E\000\200\374D\000\000\202E\000 \201D\000 \262D\000\300(E\000 sE\000\320\302E\000\200\204D\000 \264D\000\000#E\000\200\221D\000\340\rE\000\200\317D\000@\203D\000\200\224D\000@\010E\000 \306D\000\000\371D\000\360IE\000\340\355D\000\260\014E\000\000mD\000\000\344D\000\320\021E\000\340\225D\000\300\250D\000\300\342D\000\340OE\000 \271D\000`\345D\000\000\356C\000\300\217E\000\000>D\000\000\000\000\000x/F\000`BE\000pFE\000\000\365D\000\240EE\000\340\230D\000\240\220D\000@\203E\000\300\264D\000\000\014E\000P\000E\000\340\314D\000\300KD\000\000\345D\000\340\213D\000\300eD\000\300\203D\000\2600E\000\200-D\000\200\242D\000@#E\000@\237D\000`\366D\000@\365D\000`|E\000\200\360D\000@lE\000`\275D\000p|E\000\300\033D\000 YE\000\000\220D\000`\021E\000\200\331D\000 \316D\000\220\001E\000\200\311D\000\000\220D\000@\003E\000\000\310D\000\000zE\000`\321D\000\200\031D\000\350\217E\000\000\217D\000\220LF\000\270\316E\000\000\022E\000@\243D\000\310\265E\000\340\202D\000\360\010E\000\000\234D\000\000VD\000\300\212D\000`\206D\000 \272D\000\340/E\000\340\274D\000\200\355D\000\000\202D\000\200\323D\000\2603E\000\000!E\000\200\000E\000\000\\D\000x\341E\000\200\346D\000 \006E\000\000\223D\000\200]D\000\000\230D\000\360\001E\000\320QE\000\220qE\000\340\010E\000@\013E\000\300\203D\000P\002E\000\240\335D\000`\211D\000\020xE\000\200\310D\000\300\022D\000`8E\000\220XE\000x\272E\000\200\305D\000\300\022E\000\000\000\000\000\000aD\000\000\000\000\000@yD\000\200\214D\000\000\252D\000\300\250D\000\230\202E\000\340;E\000\330\257E\000\2601E\000\300\331D\000 \233D\000\000+D\000 \205D\000\200\335D\000\000\035E\000\320%E\000\000\300D\000\240:E\000\000DD\000\000\'E\000\220FE\000\300\200D\000`\214D\000\200TD\000\000\264D\000\240\014E\000 \202E\000\220\033E\000\000}D\000`)E\0000)E\000pbE\000\200TD\000`\037E\000\000\263D\000\200\"D\000\000:D\000\000\\E\000 \337D\000\000%E\000\200;E\000@-D\000\240\311D\000@\032E\000\000\000\000\000\200\006E\000\200\312D\000\200\222D\000\340\020E\000\300\367D\000\200\322D\000\200\tE\000p\tE\000`\213D\000\320\rE\000\000\000\000\000\000\317D\000\340\226D\000\200[D\000\300\203D\000 GE\000@)D\000 \251D\000\240\304D\000\320?E\000\200\242D\000\300\376D\000\200QD\000\340\217D\000\000sD\000@zD\000\340\264E\000\300xD\000\000vD\000\000uD\000\000:E\000\200\324E\000\200\256D\000\000\214D\000\000\226D\000\200,E\000\240\215D\000\340TE\000\000\264D\000\240\350D\000\260\017E\000\300,E\000\200(E\000\340yE\000p\024E\000@ZD\000`\200E\000\300\337D\000`\333D\000\300bD\000\300\353D\000\300\243D\000\240\313D\000\000\000D\000\000\000\000\000\010\223E\000\340\255D\000\0003D\000`SE\000 \305D\000`\033E\000\000\233D\000\300\261D\000\220\014E\000\200\031D\000 \313D\000\000(D\000@\220D\000\300(E\000\200\273D\000\300\327D\000\000\000\000\000`\rE\000\000\346D\000\300\357D\000\240\007E\000\340\230D\000\000\234D\000\200DD\000\030\234E\000\240\221D\000\240\224D\000\340\024E\000`\251D\000@\260D\000\200\242D\000\320\023E\000\000RD\000\000\250D\000\340\353D\000\320\030E\000\200\305D\000@>E\000\000\306D\000\000KD\000\300YD\000\340\267D\000\360\tE\000`\352D\000\200\267D\000 \375D\000\200\034E\000\000\202D\000\240}E\000h\246E\000\340\341D\000\200\276D\000\310\206E\000@;E\000\000\250D\000\360fE\000@\037E\000`\221D\000\000$D\000`\333D\000\000\226D\000\200SD\000P\001E\000\000\010D\000\020\005E\000\000\244D\000 \332D\000\340\304D\000\340\370D\000\240\tE\000 \317D\000@\320D\000\200\nE\000\200\235D\000\000\263D\000\300\323D\000@\022E\000`\365D\000@\271D\000\200\212D\000\000\341D\000\240\257D\000\000\214D\000 \206F\000\240\212D\000`\274D\000\000\257D\000\340\316D\000\220vE\000\300)D\000\000nD\000\000\022E\000\000\036D\000\000MD\000@`D\000\200\334D\000@\347D\000`\242D\000 RE\000\360ME\000\000|D\000\000\007D\000\300\205D\000\260\021E\000\000\025E\000\240\240D\000\000\242D\000\340\250D\000@\260D\000@\202E\000\200ED\000\330\347E\000\200\322D\000\000\000\000\000@\003E\000\260)E\000\200\300D\000\300\250D\000\200TE\000\300\217D\000\200\223D\000\300]D\000\020\036E\000\000\304D\000\200\274D\000\300wD\000\240\315D\000\000\341D\0000\211E\0000\023E\000\300\255D\000\240\310D\000\0006D\0000\030E\000@\215D\000\200\\D\000\000\257D\000@sD\000`\371E\0008\244E\000\240\215D\000\000\367D\000\300\223D\000\000\301D\000@PD\000@\304D\000 \301D\000\340vE\000p5E\000\000/E\000\000\357D\000@\033D\000\000\264D\000\000\230D\000\220\000E\000\200\315D\000@\332D\000 2E\000@\334D\000@\347D\000`\333D\000\350\203E\000 \350D\000\200\"E\000`\364D\000\000\264D\000\300\235D\000\300\313D\000\200mD\000\200&E\000\000\234D\000\200WD\000\000\204D\000\000\372D\000\200\204D\000p&E\000 ,E\000\240\014E\000\000\242D\000\200\266D\000\200\211D\000\260\260E\000@\334D\000\300\000E\000\300\332D\000\020\033E\000\000\264D\000\000\231D\000\300\255D\000\310\224E\000\000yD\000\000\335D\000\240\272D\000P E\000\200}D\000\300SD\0000\246E\000\360\223E\000\000\000\000\000`\022E\000\340\212D\000\000\231D\000\000\001E\000 \262E\000\000\233D\000@\003E\000\200\212D\000@XE\000\300\204D\000\000\264D\000\340\244D\000\000\000\000\000`\021E\000P.E\000\000\267D\000\000\366D\000\340\232D\000p.E\000\300\230D\000\200\214D\000\3208E\000\300ZE\000\240jE\000\200{D\000\240\013E\000\300\205D\000\360\002F\000\000\226D\000\000zD\000\000\246D\000\3005D\000\300yD\000\300\031E\000\000GD\000\340\022F\000\240\340D\000\000\264D\000\200\307D\000@?E\000`\366D\000\340,E\000\200\306D\000`\003E\000@\304D\000 (E\000\340\330D\000\000\347D\000@\203D\000\000\353D\000\300\264D\000\200\211D\000\240\304D\000\200\265D\000\300\264D\000\000\226D\000\000\000\000\000\200\201D\000 \365D\000\300\246D\000@\003E\000\200\345D\000\000\000\000\000\260\027E\000\000\000\000\000 \237D\000\200MD\000\200\001E\000`\356D\000\200\324D\000@[E\000\200\245D\000\000\355E\000\260zE\000\340AE\000\240\237D\000`\256D\000\260\021E\000\200\273D\000\200YE\000\000\341D\000\240mE\000\220\022E\000@\220D\000@\233D\000P\024E\000\200\"D\000\000jD\000 \377D\000\360NE\000\260\023E\000\200,D\000`\232D\0000\302E\000\000\026D\000\000\377D\000\2404E\000\000\327D\000`\200D\000\300nD\000\000\233D\000\200\356D\000@\034E\000\000HD\000\300IE\000\000vD\000\200\231D\000`\325D\000\240-E\000 \247D\000@AD\000@\350D\000\200\326D\000 \001E\000@\270D\000\300\256D\000\000\372D\000 \256D\000\300sE\000\240;E\000\000\210D\000@\203E\000\000TD\000\200\030D\000\200\205E\000\000\000\000\000P\242E\000\300\240D\000\200\"D\000\200nD\000\220?E\000\360\016E\000\360\013E\000\200HE\000@&E\000\000\240D\000\300\231D\000 \212E\000\000\322D\000@\355D\000\000\234D\000\000nD\000\000\216D\000\3506F\000\300\315D\000 ZE\000@\373D\000\300\002E\000\200\234D\000\300\254D\000\000\252D\000@6D\000\000\000\000\000\200\216D\000\200?D\000 \356D\000\200\221D\000\000\372D\000\000\312D\000\020\tE\000\000\341D\000\300\363D\000\260tE\000\300\376D\000\240\313D\000p&E\000\020\010E\000\000\000\000\000\000pD\000\200\025E\000@\203D\000\240|E\000\200\355D\000\200ED\000`\334D\000\220\374E\000\200\331D\000\240\273D\000@\261E\000\000\000\000\000\300\301D\000\240\207E\000\300\307D\000\340\272D\000\340\205E\000\240\237D\000\340\371D\000 \374D\0000%E\000@fD\000\350\255E\000`\213D\000\300\344D\000 \262D\000@\203D\000\000JD\000\200\005D\000\260=E\000\340\237D\000\0009E\0000\030E\000\240bE\000\000aD\000 }E\000\340\222E\000\000\315D\000\300|D\000\240\307D\000\340DE\000X\226E\000\020{E\000\000\204D\000@kD\000\200\023E\000`\266D\000 \360D\000\000\232D\000@\200D\000\000\242D\000\200VD\000\340\311D\000`\203D\000@\224D\000\240\365E\000@=D\000\200\033D\000\000\000\000\000\300\024E\000\300\203D\000\200\355D\000\240\251E\000@\335D\000\340\356D\000@0E\000\000\215D\0008\201E\000\300\002E\000p\003E\000\000\226D\000\300\306D\000@vD\000\300\350D\000\000\365C\000\260SE\000`\323D\000\340\034E\000\200\324D\000\000\210D\000 \243D\000P\232E\000 \314D\000 \325D\000\000JD\000`\363D\0000\010E\000\300oE\000@\344D\000\316\251F\000\300/E\000\000\204D\000 \302D\000\200\305D\000\000\233D\000\300\255D\000\300\231D\000`\201D\000\200hD\000\000\000\000\000@CD\000@?D\000\020VE\000\000wD\000\000\222D\000\000\365D\000\340\253E\000\000\312D\000\320RE\000\200WD\000\000\000\000\000\320OE\000@\361D\0000\036E\000\300\250D\000`\006E\000\360\013E\000p\032E\000(\334E\000\200\237D\000\000\000\000\000\320+E\000\340cE\000p\\E\000\200\312D\000\200sD\000\000wD\000\200\241D\000\000\000\000\000\000\367D\000 \227D\000\300]E\000\220\nE\000\240\310D\000\330\032F\000\000`D\000\320\032E\000@bD\000 ZE\000\300\370D\000p\243E\000  E\000\000zD\000\000\250D\000\020.E\000\340\024E\000\340\333D\000@\263D\000\200\216D\000\200eD\000\000\360C\000\220\005E\000\004\030F\000\200XD\000\200\336D\000\240\241D\000\200\004D\000\220\020E\000\300FD\000\220/E\000\346\320F\000@VD\000@\365D\000\260DE\000\200xD\000\000\000\000\000\300MD\000\000\004E\000@\005D\000\000\375D\000\2409F\000\340\252D\000`\310D\000\000\030D\000\200\225D\000@\223D\000\340\206D\000@\277D\000\200_D\000@\034E\000\240\310D\000\300\021E\000\340\300D\000@\200D\000\200bD\000\200\303D\000@\306D\000@\334D\000@\232D\000P!E\000\200cD\000\000\000\000\000\200kD\000\000zE\0008\205E\000\000\250D\000\240_E\000\000\257D\000\020\035E\000\3167G\000@\216D\000\200\324D\000\000\214D\000\200\266D\000\000\303D\000\000\233D\000\000\000\000\000\000\332D\000@\007D\000\000\264D\000@\334D\000\340\027E\000\000pD\000\000\305D\000\000\242E\000\200\030E\000 \242D\000\340\224D\000\240\250D\000\200qD\000\000\026F\000@\317D\000\000\214D\000\240\024E\0000\tE\000\020<E\000`\331D\000\200dD\000\300\215D\000\0200E\000\000\303D\000\020#E\000\320\261E\000 \205D\000\300\312D\000\200JD\000\340tE\000\000\363D\000\000\202D\000\000\341D\000\260sE\000@\273D\000\240\251E\000\300}E\000\360\023E\000 \257D\000\200fD\000\200JE\000\320\tE\000@\003E\000 \326D\000\300\350D\000\200\236D\000\300\215D\000\240\262D\000\360\026E\000\000\210D\000\300\203D\000\0005D\000\300\320D\000 \253D\000\200\253D\000\300^D\000\200\242D\000\340\314D\000\260\232E\000 \306D\000`\275D\000@\331D\000\240\363D\000\340\257D\000\300;E\000\200\010E\000\300\325D\000\000\252D\000\200\"D\000\300\332D\000\200\261D\000@_D\000\000dD\000\000|D\000\210kF\000\240\315D\000\000\002E\000\200)D\000\0005D\000\000\363D\000\240\324D\000\260oE\000`\206D\000\000\273D\000\200\311D\000\020\267E\000\340\226D\000\000\325D\000\000\271D\000\360SE\000\270\021F\000\000\331D\000@sD\000\000\177D\000\000\000\000\000\300\311D\000\260\005E\000\000xD\000\000\226D\000@KE\000\220\006E\000\200fD\000\000\377D\000\200^D\000\000dE\000@:E\000\3204E\000@\271D\000\000\274D\000\340:E\000\240\002E\000@\263D\000 \242D\000\000\226D\000\340\003E\000`\025E\000\320jE\000\260.E\000 \004E\000\020\nE\000\000\231D\000pYE\000\340\303D\000`\206E\000\200\274D\000\340\210D\000\000kD\000`\345D\000\300\363D\000\000SD\000\000\361D\000\000\350D\000\000\356D\000`\002E\000\340\302D\000\220CE\000\340\352D\000\200\277D\000\000\016E\000\020jE\000\240\342D\000\000\026E\000 \363D\000PEE\000@`D\000\000\026D\000@\000E\000\240\033E\000\000\000\000\000`\202D\000@pD\000\240:E\000\000\214D\000\240\226D\000`IE\000 \255D\000p\005E\000\200\023E\000\000\276D\000\220\246E\000\240\306D\0000\242E\000\240\264D\000@6F\000`\237D\000\260\213E\000 \220D\000\240\220D\000 )E\000\000nD\000\200\tD\000\000\202D\000\200\321D\000\200\tD\000\300`D\000 \211D\000\200\267D\000\300\346D\000\240\215D\000@\203D\000`tE\000\360\023E\000@\203D\000\300\332D\000\340\364D\000\340\024E\0000\'E\000 \312D\000\000\322D\000\220?E\000@aE\000\240\033E\000@\331D\000h\230E\000`\023E\000\300\217D\000`8E\000`\355D\000\320\033E\000\220XE\000\300\016E\000\360mE\000\300\215D\000\000\261D\000@\343D\000 \301D\000 \330D\000\240\006E\000\240?E\000\200@D\000\000\365C\000\300\250D\000P\010E\000\000fD\000\300\024E\000@#D\000 ^E\000\360\036E\000\240\212D\000\300\217D\000\000*D\000\260<E\000 \224D\000 \272D\000\240\013E\000`\310D\000\000/E\000\000\226D\000\000XD\000\000\322D\000\200\310D\000@RD\000\200\236D\000\300\204D\000@\273D\0008\235E\000\000\267D\000\000\214D\000\340\345D\000\000aD\000\220@E\000\000\341D\0000\000E\000\000/D\000\200YD\000\000\255D\000\200\\D\000\200\362D\000\240\002E\000\340\234D\000\300\200D\000 \240D\000@\217D\000 \275D\000\240\340D\000@\377D\000\200+E\000`\224D\000\000zD\000\0000D\000\340\253E\000@NE\000\000\353D\0000AE\000\240\177E\000`\025E\000`\232D\000\200\350D\000`\214D\000\000\354D\000\200KE\000\000vD\000\200eD\000P\026E\000\320\204E\000@!D\000\000\226D\000@\342D\000@_D\000\200\315D\000\000zD\000\340\232D\000\000\322D\000\300\246D\000 \322D\000\200\263D\000\000\233D\000\240\375D\000p\024E\000\360\'E\000`\265D\000\200\364D\000 2E\000@iD\000\000\312D\000\300ZD\000\240\014E\000\300}D\000\000\325D\000\240\266D\000\340\031E\000\200\307D\000\200\263D\000\000\372D\000\200\273E\000\340\331D\000@2D\000\300+E\000\200\253D\000\300\207D\000\200\003E\000\300\016E\000\200\334D\000\340\235D\000\360>E\000\200\326D\000 \000E\000\320\230E\000\240\203D\000\300\036E\000\200\257D\000@\317D\000 \200E\000`\375D\000 qE\000\200;E\000\340\022E\000\200\236D\000\300\311D\000\0007D\000`\206D\000 \377D\000p\024E\000\300\255E\000\000TD\000\200TE\000\300\243D\000\000\300D\000\340\247D\000@bD\000@\246D\000\220/E\000@NE\000\000uD\000\3007E\000\000\260D\000\300\027E\000\200\250D\000`\034E\000\370\313E\000 \210D\000\000\326D\000\000PD\000\000\000\000\0000\204E\000\000\346D\000`yE\000\340\230D\000\200\004E\000\300kD\000@8D\000\000ZD\000\300<E\000\000\341D\000\000\355C\000\2001D\000 \253D\000\300kE\000\300\025E\000\200eD\000@gE\000\200\254D\000\300\215D\000\300\303D\000\000pD\000\000\310D\000@\270D\000\200\266D\000\200\207D\000@\250D\000\220\014E\000\240\025E\000\000\004D\000`\206D\000\200OD\000\320HE\000\340\005E\000\020\032E\000\200\202D\000\000\360D\000\220\036E\000\240oE\000\200\261D\000@\035D\000 \nE\000p\024E\000\000HD\000\0009E\000 #E\000\030\354E\000\300aD\000\200aD\000\230\340E\000\200\205D\000\000\000\000\000\0003E\000\2008E\000`3E\000\000\264D\000\240\314D\000\200\225D\000\340\257D\000@\253D\000@\325D\000 CE\000\340\201D\000\000\303D\0000\007E\000\370\261E\000\300\005E\0000\030E\000\300AE\000\360,E\000\200sD\000\300\231E\000\300 E\000H\000F\000\200\200D\000@3D\000\200\300D\000\300\212D\000\000\207D\000p\010E\000\340\253E\000\300(E\000@`D\000\200\005E\000\200\273D\000\0004D\000 \036E\000\000\272D\000\240\312D\000P\203E\000@\013E\000\200\224D\000@\324D\000\220\037E\000\260\022E\000\220*E\000\260tE\000\000\264D\000\340\252D\000\300\351D\000\300\336D\000\300ED\000\000zE\000\200\350D\000\000\317D\000 \210E\000ptE\000\000RD\000\210\204E\000\360%E\000\240\322D\000\000\000\000\000`\205D\000\340\323D\000 \032E\000\000\221D\000@4D\000\000fD\000`\206E\000\340\246D\000`\337D\000\340\001E\000\200\312D\000\260\034E\000\300\000E\000`\320D\000\000\321D\000\240\353D\000\300\363D\000\030\211E\000\000\257E\000\240*E\000 \367D\000@\351D\000p\016E\000\200\261D\000@\370D\0000\001E\000\3401E\000@\304D\000\220(E\000\000uD\000@oD\000@\003E\000\000\276D\000@\262D\000\000\265D\000 \277E\000@\270D\000`\371D"
      }
    }
  }
}
node {
  name: "SparseTensor/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1762
          }
          dim {
            size: 2
          }
        }
        tensor_contentt\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000~
      }
    }
  }
}
node {
  name: "SparseTensor/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1762
          }
        }
        string_val: "94591"
        string_val: "95116"
        string_val: "94553"
        string_val: "94044"
        string_val: "94928"
        string_val: "94024"
        string_val: "94558"
        string_val: "94920"
        string_val: "94115"
        string_val: "95111"
        string_val: "94518"
        string_val: "94601"
        string_val: "94903"
        string_val: "94061"
        string_val: "95123"
        string_val: "46123"
        string_val: "94547"
        string_val: "94404"
        string_val: "94402"
        string_val: "94602"
        string_val: "94621"
        string_val: "94127"
        string_val: "94116"
        string_val: "94024"
        string_val: "94589"
        string_val: "94027"
        string_val: "46123"
        string_val: "94014"
        string_val: "95023"
        string_val: "95012"
        string_val: "94111"
        string_val: "95650"
        string_val: "94803"
        string_val: "94602"
        string_val: "94587"
        string_val: "94582"
        string_val: "94606"
        string_val: "95014"
        string_val: "94705"
        string_val: "94526"
        string_val: "94102"
        string_val: "94111"
        string_val: "94619"
        string_val: "93292"
        string_val: "94531"
        string_val: "95116"
        string_val: "46123"
        string_val: "94610"
        string_val: "95117"
        string_val: "95008"
        string_val: "94401"
        string_val: "95134"
        string_val: "94086"
        string_val: "94063"
        string_val: "95136"
        string_val: "94015"
        string_val: "94087"
        string_val: "94945"
        string_val: "95128"
        string_val: "94041"
        string_val: "94611"
        string_val: "94519"
        string_val: "94937"
        string_val: "94028"
        string_val: "94526"
        string_val: "94608"
        string_val: "94104"
        string_val: "95023"
        string_val: "21401"
        string_val: "94015"
        string_val: "95127"
        string_val: "94596"
        string_val: "94507"
        string_val: "94531"
        string_val: "46123"
        string_val: "94010"
        string_val: "94925"
        string_val: "94080"
        string_val: "94306"
        string_val: "94403"
        string_val: "95035"
        string_val: "95122"
        string_val: "94901"
        string_val: "94621"
        string_val: "94102"
        string_val: "94061"
        string_val: "89431"
        string_val: "94553"
        string_val: "95446"
        string_val: "94066"
        string_val: "94595"
        string_val: "94945"
        string_val: "94558"
        string_val: "94519"
        string_val: "95117"
        string_val: "94025"
        string_val: "94928"
        string_val: "94605"
        string_val: "94133"
        string_val: "94526"
        string_val: "94306"
        string_val: "94949"
        string_val: "95118"
        string_val: "94957"
        string_val: "94403"
        string_val: "94110"
        string_val: "94118"
        string_val: "94509"
        string_val: "94563"
        string_val: "94901"
        string_val: "95127"
        string_val: "94612"
        string_val: "97701"
        string_val: "94107"
        string_val: "94108"
        string_val: "95117"
        string_val: "94608"
        string_val: "94060"
        string_val: "94010"
        string_val: "95134"
        string_val: "97701"
        string_val: "95070"
        string_val: "94062"
        string_val: "94116"
        string_val: "94520"
        string_val: "94127"
        string_val: "94547"
        string_val: "90266"
        string_val: "94060"
        string_val: "95116"
        string_val: "94108"
        string_val: "95118"
        string_val: "94089"
        string_val: "95650"
        string_val: "95117"
        string_val: "95136"
        string_val: "95014"
        string_val: "95476"
        string_val: "95112"
        string_val: "94804"
        string_val: "94024"
        string_val: "95125"
        string_val: "95122"
        string_val: "94506"
        string_val: "94920"
        string_val: "94123"
        string_val: "94957"
        string_val: "94612"
        string_val: "94028"
        string_val: "94530"
        string_val: "94010"
        string_val: "94547"
        string_val: "90266"
        string_val: "94920"
        string_val: "94609"
        string_val: "95126"
        string_val: "94612"
        string_val: "95123"
        string_val: "94060"
        string_val: "94595"
        string_val: "94402"
        string_val: "94041"
        string_val: "94005"
        string_val: "94923"
        string_val: "94965"
        string_val: "94528"
        string_val: "94947"
        string_val: "95030"
        string_val: "94115"
        string_val: "95125"
        string_val: "95113"
        string_val: "94920"
        string_val: "94116"
        string_val: "94924"
        string_val: "95023"
        string_val: "94027"
        string_val: "94928"
        string_val: "94402"
        string_val: "94027"
        string_val: "94965"
        string_val: "94115"
        string_val: "94601"
        string_val: "94541"
        string_val: "94601"
        string_val: "94607"
        string_val: "95126"
        string_val: "94531"
        string_val: "95129"
        string_val: "95128"
        string_val: "94507"
        string_val: "94402"
        string_val: "94517"
        string_val: "94062"
        string_val: "94002"
        string_val: "94133"
        string_val: "94117"
        string_val: "94501"
        string_val: "94117"
        string_val: "97701"
        string_val: "95124"
        string_val: "94705"
        string_val: "94158"
        string_val: "94043"
        string_val: "94030"
        string_val: "94303"
        string_val: "94903"
        string_val: "94117"
        string_val: "94102"
        string_val: "94618"
        string_val: "94509"
        string_val: "94804"
        string_val: "95008"
        string_val: "94925"
        string_val: "95035"
        string_val: "94621"
        string_val: "94608"
        string_val: "95117"
        string_val: "94121"
        string_val: "95122"
        string_val: "94301"
        string_val: "94541"
        string_val: "95032"
        string_val: "94530"
        string_val: "94801"
        string_val: "94924"
        string_val: "95116"
        string_val: "97701"
        string_val: "94925"
        string_val: "94583"
        string_val: "94949"
        string_val: "94044"
        string_val: "94102"
        string_val: "94122"
        string_val: "94970"
        string_val: "95112"
        string_val: "95131"
        string_val: "94949"
        string_val: "95035"
        string_val: "94949"
        string_val: "94521"
        string_val: "94107"
        string_val: "94511"
        string_val: "94608"
        string_val: "95050"
        string_val: "94112"
        string_val: "94070"
        string_val: "94133"
        string_val: "94086"
        string_val: "94526"
        string_val: "94513"
        string_val: "94403"
        string_val: "94118"
        string_val: "94028"
        string_val: "95134"
        string_val: "94080"
        string_val: "95117"
        string_val: "94611"
        string_val: "94605"
        string_val: "89431"
        string_val: "94503"
        string_val: "94123"
        string_val: "94970"
        string_val: "94603"
        string_val: "94080"
        string_val: "94085"
        string_val: "94526"
        string_val: "95050"
        string_val: "95030"
        string_val: "94611"
        string_val: "94028"
        string_val: "94122"
        string_val: "94103"
        string_val: "94019"
        string_val: "94801"
        string_val: "95148"
        string_val: "94970"
        string_val: "94028"
        string_val: "94502"
        string_val: "94602"
        string_val: "94517"
        string_val: "95125"
        string_val: "93292"
        string_val: "94608"
        string_val: "94518"
        string_val: "95132"
        string_val: "94521"
        string_val: "94965"
        string_val: "46123"
        string_val: "94952"
        string_val: "94595"
        string_val: "95020"
        string_val: "94503"
        string_val: "95125"
        string_val: "94065"
        string_val: "94089"
        string_val: "94553"
        string_val: "94060"
        string_val: "95121"
        string_val: "94925"
        string_val: "94556"
        string_val: "94598"
        string_val: "94801"
        string_val: "94005"
        string_val: "95133"
        string_val: "94403"
        string_val: "94025"
        string_val: "95132"
        string_val: "94030"
        string_val: "94598"
        string_val: "94587"
        string_val: "95128"
        string_val: "95127"
        string_val: "94103"
        string_val: "95118"
        string_val: "95023"
        string_val: "94939"
        string_val: "94087"
        string_val: "94928"
        string_val: "94158"
        string_val: "94025"
        string_val: "94112"
        string_val: "95112"
        string_val: "94517"
        string_val: "94605"
        string_val: "94111"
        string_val: "93292"
        string_val: "94080"
        string_val: "95035"
        string_val: "95148"
        string_val: "94541"
        string_val: "94062"
        string_val: "94541"
        string_val: "94521"
        string_val: "95037"
        string_val: "94920"
        string_val: "94960"
        string_val: "94513"
        string_val: "95476"
        string_val: "94019"
        string_val: "94005"
        string_val: "94117"
        string_val: "95462"
        string_val: "21401"
        string_val: "95112"
        string_val: "94803"
        string_val: "95035"
        string_val: "94087"
        string_val: "94518"
        string_val: "94703"
        string_val: "95118"
        string_val: "94131"
        string_val: "94518"
        string_val: "97701"
        string_val: "94402"
        string_val: "95032"
        string_val: "94086"
        string_val: "94080"
        string_val: "94523"
        string_val: "94024"
        string_val: "94015"
        string_val: "94531"
        string_val: "95023"
        string_val: "94553"
        string_val: "94303"
        string_val: "94601"
        string_val: "94547"
        string_val: "94108"
        string_val: "94030"
        string_val: "94118"
        string_val: "94089"
        string_val: "94501"
        string_val: "94945"
        string_val: "94903"
        string_val: "94306"
        string_val: "95128"
        string_val: "95008"
        string_val: "95148"
        string_val: "94121"
        string_val: "94061"
        string_val: "94306"
        string_val: "95123"
        string_val: "94041"
        string_val: "94610"
        string_val: "94583"
        string_val: "94105"
        string_val: "95132"
        string_val: "95050"
        string_val: "94582"
        string_val: "94112"
        string_val: "94158"
        string_val: "94133"
        string_val: "94947"
        string_val: "95123"
        string_val: "94596"
        string_val: "95134"
        string_val: "94520"
        string_val: "94020"
        string_val: "94920"
        string_val: "95121"
        string_val: "94563"
        string_val: "94924"
        string_val: "94595"
        string_val: "94118"
        string_val: "95112"
        string_val: "94929"
        string_val: "94904"
        string_val: "21401"
        string_val: "94102"
        string_val: "95020"
        string_val: "94505"
        string_val: "94022"
        string_val: "94621"
        string_val: "94965"
        string_val: "94123"
        string_val: "94112"
        string_val: "94558"
        string_val: "94595"
        string_val: "94105"
        string_val: "95050"
        string_val: "93292"
        string_val: "95136"
        string_val: "94117"
        string_val: "95476"
        string_val: "94103"
        string_val: "94060"
        string_val: "94607"
        string_val: "94596"
        string_val: "94904"
        string_val: "94520"
        string_val: "94609"
        string_val: "95035"
        string_val: "94124"
        string_val: "95118"
        string_val: "95132"
        string_val: "94558"
        string_val: "94619"
        string_val: "94904"
        string_val: "94123"
        string_val: "93292"
        string_val: "94945"
        string_val: "94965"
        string_val: "95132"
        string_val: "94043"
        string_val: "94511"
        string_val: "94109"
        string_val: "94520"
        string_val: "94116"
        string_val: "94109"
        string_val: "94946"
        string_val: "94118"
        string_val: "94015"
        string_val: "94903"
        string_val: "94109"
        string_val: "94937"
        string_val: "94010"
        string_val: "94519"
        string_val: "94158"
        string_val: "94014"
        string_val: "94070"
        string_val: "95148"
        string_val: "94022"
        string_val: "94528"
        string_val: "90266"
        string_val: "94122"
        string_val: "94060"
        string_val: "94133"
        string_val: "94528"
        string_val: "94605"
        string_val: "95136"
        string_val: "94582"
        string_val: "94803"
        string_val: "94903"
        string_val: "94030"
        string_val: "94015"
        string_val: "94509"
        string_val: "94015"
        string_val: "94025"
        string_val: "94525"
        string_val: "94582"
        string_val: "94605"
        string_val: "94111"
        string_val: "95127"
        string_val: "95035"
        string_val: "94553"
        string_val: "94110"
        string_val: "94607"
        string_val: "94511"
        string_val: "94103"
        string_val: "94547"
        string_val: "94517"
        string_val: "94102"
        string_val: "94920"
        string_val: "94020"
        string_val: "94553"
        string_val: "94027"
        string_val: "89431"
        string_val: "94582"
        string_val: "94952"
        string_val: "90266"
        string_val: "95135"
        string_val: "94595"
        string_val: "94563"
        string_val: "94928"
        string_val: "94028"
        string_val: "94132"
        string_val: "95421"
        string_val: "95046"
        string_val: "94947"
        string_val: "89431"
        string_val: "95476"
        string_val: "94595"
        string_val: "94602"
        string_val: "94131"
        string_val: "94080"
        string_val: "94803"
        string_val: "94521"
        string_val: "94602"
        string_val: "94587"
        string_val: "95030"
        string_val: "94521"
        string_val: "94025"
        string_val: "94066"
        string_val: "95008"
        string_val: "94611"
        string_val: "94513"
        string_val: "94621"
        string_val: "94531"
        string_val: "94089"
        string_val: "94509"
        string_val: "95113"
        string_val: "94945"
        string_val: "94952"
        string_val: "94553"
        string_val: "21401"
        string_val: "94705"
        string_val: "95123"
        string_val: "94060"
        string_val: "95030"
        string_val: "94041"
        string_val: "94102"
        string_val: "94027"
        string_val: "94611"
        string_val: "94519"
        string_val: "94563"
        string_val: "94602"
        string_val: "95037"
        string_val: "94928"
        string_val: "94587"
        string_val: "94025"
        string_val: "94110"
        string_val: "95133"
        string_val: "94061"
        string_val: "94612"
        string_val: "94607"
        string_val: "95051"
        string_val: "94805"
        string_val: "94116"
        string_val: "94103"
        string_val: "94703"
        string_val: "94063"
        string_val: "95650"
        string_val: "89431"
        string_val: "95054"
        string_val: "95132"
        string_val: "94123"
        string_val: "95301"
        string_val: "97701"
        string_val: "94531"
        string_val: "94904"
        string_val: "94002"
        string_val: "97701"
        string_val: "94595"
        string_val: "95020"
        string_val: "95023"
        string_val: "95129"
        string_val: "90266"
        string_val: "95014"
        string_val: "94107"
        string_val: "94957"
        string_val: "94507"
        string_val: "90266"
        string_val: "94553"
        string_val: "94903"
        string_val: "95131"
        string_val: "94043"
        string_val: "94112"
        string_val: "94621"
        string_val: "94520"
        string_val: "94015"
        string_val: "94404"
        string_val: "94619"
        string_val: "94949"
        string_val: "95046"
        string_val: "95125"
        string_val: "94547"
        string_val: "95112"
        string_val: "94131"
        string_val: "94015"
        string_val: "94947"
        string_val: "94903"
        string_val: "94507"
        string_val: "94589"
        string_val: "94131"
        string_val: "95134"
        string_val: "94941"
        string_val: "95023"
        string_val: "94401"
        string_val: "94086"
        string_val: "94903"
        string_val: "95134"
        string_val: "95051"
        string_val: "94110"
        string_val: "94923"
        string_val: "95111"
        string_val: "94002"
        string_val: "94945"
        string_val: "94131"
        string_val: "95134"
        string_val: "95023"
        string_val: "94804"
        string_val: "94080"
        string_val: "94521"
        string_val: "21401"
        string_val: "95030"
        string_val: "94608"
        string_val: "95125"
        string_val: "94158"
        string_val: "95122"
        string_val: "94506"
        string_val: "94118"
        string_val: "94531"
        string_val: "94038"
        string_val: "94519"
        string_val: "95125"
        string_val: "94301"
        string_val: "93292"
        string_val: "94920"
        string_val: "94930"
        string_val: "94134"
        string_val: "90266"
        string_val: "94123"
        string_val: "95139"
        string_val: "94526"
        string_val: "94928"
        string_val: "94595"
        string_val: "94506"
        string_val: "94080"
        string_val: "94530"
        string_val: "94509"
        string_val: "94549"
        string_val: "95030"
        string_val: "95628"
        string_val: "94107"
        string_val: "95122"
        string_val: "94608"
        string_val: "94404"
        string_val: "46123"
        string_val: "95123"
        string_val: "94804"
        string_val: "94589"
        string_val: "94587"
        string_val: "94121"
        string_val: "94118"
        string_val: "95476"
        string_val: "94089"
        string_val: "94123"
        string_val: "94611"
        string_val: "94563"
        string_val: "95134"
        string_val: "94110"
        string_val: "94547"
        string_val: "94531"
        string_val: "95070"
        string_val: "94507"
        string_val: "94606"
        string_val: "94510"
        string_val: "94507"
        string_val: "94404"
        string_val: "94903"
        string_val: "94109"
        string_val: "94607"
        string_val: "94583"
        string_val: "95131"
        string_val: "94801"
        string_val: "94022"
        string_val: "94920"
        string_val: "94158"
        string_val: "95050"
        string_val: "94105"
        string_val: "94952"
        string_val: "94526"
        string_val: "94021"
        string_val: "95117"
        string_val: "94040"
        string_val: "94060"
        string_val: "94806"
        string_val: "95136"
        string_val: "94509"
        string_val: "94404"
        string_val: "94109"
        string_val: "94523"
        string_val: "94509"
        string_val: "94970"
        string_val: "94803"
        string_val: "94530"
        string_val: "95131"
        string_val: "95135"
        string_val: "95650"
        string_val: "95131"
        string_val: "94109"
        string_val: "95113"
        string_val: "94087"
        string_val: "94801"
        string_val: "94127"
        string_val: "94030"
        string_val: "95111"
        string_val: "94505"
        string_val: "94019"
        string_val: "94587"
        string_val: "95023"
        string_val: "94070"
        string_val: "94015"
        string_val: "94506"
        string_val: "94903"
        string_val: "94403"
        string_val: "95110"
        string_val: "94111"
        string_val: "94103"
        string_val: "94970"
        string_val: "94085"
        string_val: "95037"
        string_val: "95122"
        string_val: "95134"
        string_val: "94123"
        string_val: "94528"
        string_val: "94523"
        string_val: "95148"
        string_val: "94028"
        string_val: "94517"
        string_val: "94903"
        string_val: "94582"
        string_val: "94127"
        string_val: "94572"
        string_val: "89431"
        string_val: "94087"
        string_val: "94123"
        string_val: "94040"
        string_val: "94123"
        string_val: "95116"
        string_val: "94957"
        string_val: "94952"
        string_val: "94531"
        string_val: "94928"
        string_val: "94530"
        string_val: "94605"
        string_val: "95132"
        string_val: "95014"
        string_val: "94595"
        string_val: "95111"
        string_val: "95023"
        string_val: "95119"
        string_val: "94027"
        string_val: "94025"
        string_val: "94509"
        string_val: "94519"
        string_val: "94402"
        string_val: "95112"
        string_val: "94941"
        string_val: "95030"
        string_val: "94610"
        string_val: "95128"
        string_val: "95116"
        string_val: "94549"
        string_val: "94123"
        string_val: "94102"
        string_val: "94572"
        string_val: "94606"
        string_val: "90266"
        string_val: "94903"
        string_val: "94107"
        string_val: "95118"
        string_val: "95131"
        string_val: "95110"
        string_val: "94960"
        string_val: "90266"
        string_val: "95628"
        string_val: "89431"
        string_val: "94014"
        string_val: "94920"
        string_val: "94945"
        string_val: "94127"
        string_val: "95136"
        string_val: "94609"
        string_val: "94112"
        string_val: "94920"
        string_val: "94122"
        string_val: "94530"
        string_val: "95111"
        string_val: "94024"
        string_val: "95032"
        string_val: "94301"
        string_val: "46123"
        string_val: "94541"
        string_val: "94038"
        string_val: "94015"
        string_val: "95112"
        string_val: "95113"
        string_val: "94596"
        string_val: "94509"
        string_val: "94089"
        string_val: "94937"
        string_val: "93292"
        string_val: "94019"
        string_val: "94027"
        string_val: "95476"
        string_val: "95139"
        string_val: "94806"
        string_val: "94904"
        string_val: "95002"
        string_val: "95476"
        string_val: "94107"
        string_val: "94021"
        string_val: "94605"
        string_val: "90266"
        string_val: "95070"
        string_val: "94107"
        string_val: "94610"
        string_val: "93292"
        string_val: "94587"
        string_val: "94103"
        string_val: "94070"
        string_val: "95125"
        string_val: "94010"
        string_val: "94610"
        string_val: "94061"
        string_val: "94132"
        string_val: "95110"
        string_val: "94080"
        string_val: "94547"
        string_val: "94805"
        string_val: "94080"
        string_val: "94110"
        string_val: "94110"
        string_val: "94103"
        string_val: "94118"
        string_val: "95032"
        string_val: "94123"
        string_val: "94619"
        string_val: "95126"
        string_val: "95650"
        string_val: "95134"
        string_val: "94030"
        string_val: "89431"
        string_val: "95123"
        string_val: "94110"
        string_val: "95131"
        string_val: "95051"
        string_val: "94806"
        string_val: "94402"
        string_val: "94404"
        string_val: "94925"
        string_val: "94803"
        string_val: "94070"
        string_val: "94904"
        string_val: "94404"
        string_val: "94121"
        string_val: "94133"
        string_val: "95123"
        string_val: "94010"
        string_val: "95111"
        string_val: "94517"
        string_val: "95131"
        string_val: "94107"
        string_val: "94903"
        string_val: "95070"
        string_val: "95112"
        string_val: "94505"
        string_val: "94123"
        string_val: "94086"
        string_val: "94608"
        string_val: "94401"
        string_val: "95046"
        string_val: "94103"
        string_val: "95070"
        string_val: "94505"
        string_val: "95116"
        string_val: "94541"
        string_val: "94563"
        string_val: "94118"
        string_val: "94965"
        string_val: "94002"
        string_val: "94089"
        string_val: "95023"
        string_val: "95051"
        string_val: "95128"
        string_val: "94806"
        string_val: "94705"
        string_val: "94965"
        string_val: "95023"
        string_val: "94124"
        string_val: "95014"
        string_val: "94618"
        string_val: "94123"
        string_val: "94110"
        string_val: "95120"
        string_val: "94558"
        string_val: "94901"
        string_val: "95032"
        string_val: "94587"
        string_val: "94928"
        string_val: "95054"
        string_val: "94027"
        string_val: "95118"
        string_val: "95110"
        string_val: "94611"
        string_val: "94612"
        string_val: "95476"
        string_val: "95023"
        string_val: "94587"
        string_val: "94062"
        string_val: "94541"
        string_val: "94080"
        string_val: "94928"
        string_val: "94609"
        string_val: "94526"
        string_val: "95050"
        string_val: "95020"
        string_val: "94513"
        string_val: "94061"
        string_val: "95125"
        string_val: "94517"
        string_val: "95035"
        string_val: "94080"
        string_val: "94941"
        string_val: "93292"
        string_val: "94587"
        string_val: "97701"
        string_val: "95132"
        string_val: "93292"
        string_val: "94044"
        string_val: "94973"
        string_val: "94945"
        string_val: "95134"
        string_val: "94806"
        string_val: "94903"
        string_val: "95116"
        string_val: "94060"
        string_val: "94024"
        string_val: "94601"
        string_val: "94703"
        string_val: "94607"
        string_val: "94530"
        string_val: "95628"
        string_val: "94619"
        string_val: "94558"
        string_val: "94401"
        string_val: "94022"
        string_val: "94503"
        string_val: "95030"
        string_val: "94086"
        string_val: "94404"
        string_val: "94501"
        string_val: "95140"
        string_val: "94024"
        string_val: "94112"
        string_val: "94110"
        string_val: "95139"
        string_val: "94133"
        string_val: "94525"
        string_val: "94587"
        string_val: "95134"
        string_val: "94928"
        string_val: "95116"
        string_val: "94526"
        string_val: "94582"
        string_val: "95123"
        string_val: "94530"
        string_val: "94024"
        string_val: "94086"
        string_val: "94402"
        string_val: "94301"
        string_val: "94062"
        string_val: "94509"
        string_val: "94965"
        string_val: "95111"
        string_val: "95129"
        string_val: "95070"
        string_val: "89431"
        string_val: "90266"
        string_val: "95051"
        string_val: "94804"
        string_val: "94903"
        string_val: "94041"
        string_val: "95050"
        string_val: "94618"
        string_val: "95030"
        string_val: "95121"
        string_val: "94062"
        string_val: "95116"
        string_val: "95628"
        string_val: "94025"
        string_val: "94041"
        string_val: "94087"
        string_val: "95126"
        string_val: "94602"
        string_val: "90266"
        string_val: "94158"
        string_val: "94595"
        string_val: "94066"
        string_val: "94112"
        string_val: "94947"
        string_val: "94089"
        string_val: "94131"
        string_val: "94904"
        string_val: "94028"
        string_val: "94132"
        string_val: "95014"
        string_val: "94530"
        string_val: "95125"
        string_val: "94061"
        string_val: "94070"
        string_val: "95476"
        string_val: "94402"
        string_val: "94022"
        string_val: "94503"
        string_val: "94541"
        string_val: "94105"
        string_val: "94027"
        string_val: "90266"
        string_val: "94117"
        string_val: "94518"
        string_val: "94024"
        string_val: "94517"
        string_val: "95112"
        string_val: "95136"
        string_val: "94596"
        string_val: "94133"
        string_val: "94063"
        string_val: "94607"
        string_val: "94061"
        string_val: "95035"
        string_val: "94525"
        string_val: "94949"
        string_val: "94505"
        string_val: "94062"
        string_val: "95032"
        string_val: "94118"
        string_val: "94928"
        string_val: "94547"
        string_val: "94525"
        string_val: "94611"
        string_val: "94403"
        string_val: "94605"
        string_val: "94920"
        string_val: "94572"
        string_val: "95035"
        string_val: "94115"
        string_val: "94596"
        string_val: "94103"
        string_val: "94062"
        string_val: "94930"
        string_val: "94513"
        string_val: "94930"
        string_val: "95130"
        string_val: "94303"
        string_val: "94558"
        string_val: "94603"
        string_val: "94115"
        string_val: "95117"
        string_val: "95127"
        string_val: "95127"
        string_val: "94608"
        string_val: "90266"
        string_val: "95111"
        string_val: "94022"
        string_val: "94103"
        string_val: "94015"
        string_val: "94116"
        string_val: "94080"
        string_val: "95476"
        string_val: "94107"
        string_val: "94946"
        string_val: "94805"
        string_val: "95112"
        string_val: "94517"
        string_val: "94952"
        string_val: "95132"
        string_val: "94110"
        string_val: "94024"
        string_val: "94117"
        string_val: "94611"
        string_val: "94517"
        string_val: "90266"
        string_val: "94618"
        string_val: "94705"
        string_val: "95136"
        string_val: "94080"
        string_val: "94303"
        string_val: "94111"
        string_val: "94553"
        string_val: "94954"
        string_val: "94611"
        string_val: "94089"
        string_val: "94080"
        string_val: "94089"
        string_val: "94806"
        string_val: "94928"
        string_val: "94118"
        string_val: "95116"
        string_val: "94611"
        string_val: "21401"
        string_val: "94513"
        string_val: "94595"
        string_val: "95120"
        string_val: "95110"
        string_val: "94089"
        string_val: "94519"
        string_val: "94070"
        string_val: "94610"
        string_val: "90266"
        string_val: "94801"
        string_val: "95051"
        string_val: "94025"
        string_val: "95628"
        string_val: "94608"
        string_val: "95122"
        string_val: "94066"
        string_val: "94547"
        string_val: "94903"
        string_val: "94019"
        string_val: "95127"
        string_val: "94805"
        string_val: "95134"
        string_val: "94583"
        string_val: "94805"
        string_val: "94531"
        string_val: "95127"
        string_val: "94598"
        string_val: "94502"
        string_val: "94018"
        string_val: "94518"
        string_val: "94109"
        string_val: "95129"
        string_val: "95122"
        string_val: "94526"
        string_val: "95118"
        string_val: "95135"
        string_val: "94015"
        string_val: "94112"
        string_val: "94103"
        string_val: "94598"
        string_val: "95008"
        string_val: "94928"
        string_val: "94924"
        string_val: "94117"
        string_val: "93292"
        string_val: "94121"
        string_val: "94104"
        string_val: "94957"
        string_val: "95134"
        string_val: "95050"
        string_val: "94109"
        string_val: "95135"
        string_val: "94920"
        string_val: "95135"
        string_val: "94513"
        string_val: "94123"
        string_val: "94949"
        string_val: "95014"
        string_val: "94132"
        string_val: "94118"
        string_val: "95121"
        string_val: "89431"
        string_val: "94949"
        string_val: "94123"
        string_val: "94531"
        string_val: "95134"
        string_val: "94806"
        string_val: "89431"
        string_val: "94608"
        string_val: "94957"
        string_val: "95126"
        string_val: "94102"
        string_val: "94019"
        string_val: "94971"
        string_val: "94595"
        string_val: "94027"
        string_val: "95131"
        string_val: "94924"
        string_val: "95008"
        string_val: "94070"
        string_val: "94937"
        string_val: "94528"
        string_val: "94553"
        string_val: "94115"
        string_val: "94903"
        string_val: "94970"
        string_val: "94801"
        string_val: "94553"
        string_val: "94547"
        string_val: "94063"
        string_val: "94547"
        string_val: "94901"
        string_val: "94526"
        string_val: "94108"
        string_val: "94080"
        string_val: "94920"
        string_val: "94103"
        string_val: "94702"
        string_val: "94952"
        string_val: "94107"
        string_val: "95476"
        string_val: "94507"
        string_val: "94509"
        string_val: "94549"
        string_val: "94618"
        string_val: "95628"
        string_val: "94621"
        string_val: "95125"
        string_val: "94102"
        string_val: "94801"
        string_val: "94558"
        string_val: "94010"
        string_val: "94517"
        string_val: "95136"
        string_val: "94133"
        string_val: "89431"
        string_val: "94541"
        string_val: "94501"
        string_val: "95135"
        string_val: "94043"
        string_val: "94117"
        string_val: "94509"
        string_val: "95008"
        string_val: "94928"
        string_val: "95120"
        string_val: "94601"
        string_val: "95051"
        string_val: "94945"
        string_val: "94301"
        string_val: "94102"
        string_val: "89431"
        string_val: "94015"
        string_val: "95070"
        string_val: "89431"
        string_val: "94965"
        string_val: "94901"
        string_val: "95134"
        string_val: "94505"
        string_val: "94583"
        string_val: "94301"
        string_val: "94102"
        string_val: "94103"
        string_val: "95135"
        string_val: "94518"
        string_val: "94080"
        string_val: "94403"
        string_val: "94105"
        string_val: "94553"
        string_val: "95127"
        string_val: "94109"
        string_val: "95476"
        string_val: "94587"
        string_val: "94951"
        string_val: "94587"
        string_val: "94063"
        string_val: "95472"
        string_val: "94945"
        string_val: "94804"
        string_val: "94556"
        string_val: "94612"
        string_val: "94521"
        string_val: "94027"
        string_val: "94043"
        string_val: "94806"
        string_val: "93292"
        string_val: "95148"
        string_val: "94127"
        string_val: "46123"
        string_val: "94608"
        string_val: "95054"
        string_val: "95628"
        string_val: "95121"
        string_val: "94965"
        string_val: "94605"
        string_val: "95436"
        string_val: "94109"
        string_val: "94589"
        string_val: "94941"
        string_val: "94609"
        string_val: "95134"
        string_val: "94089"
        string_val: "94118"
        string_val: "95051"
        string_val: "94133"
        string_val: "94619"
        string_val: "94549"
        string_val: "93292"
        string_val: "95128"
        string_val: "94062"
        string_val: "94502"
        string_val: "94301"
        string_val: "94970"
        string_val: "94531"
        string_val: "95032"
        string_val: "95128"
        string_val: "94010"
        string_val: "94611"
        string_val: "94602"
        string_val: "94403"
        string_val: "95436"
        string_val: "94117"
        string_val: "90266"
        string_val: "95132"
        string_val: "94102"
        string_val: "94123"
        string_val: "94158"
        string_val: "94108"
        string_val: "94506"
        string_val: "94402"
        string_val: "94928"
        string_val: "95118"
        string_val: "94583"
        string_val: "94530"
        string_val: "95123"
        string_val: "94402"
        string_val: "95139"
        string_val: "94066"
        string_val: "94121"
        string_val: "94002"
        string_val: "94553"
        string_val: "94952"
        string_val: "94621"
        string_val: "95132"
        string_val: "90266"
        string_val: "94025"
        string_val: "94930"
        string_val: "95111"
        string_val: "95124"
        string_val: "94014"
        string_val: "95120"
        string_val: "94102"
        string_val: "95130"
        string_val: "94301"
        string_val: "94618"
        string_val: "94105"
        string_val: "94947"
        string_val: "94015"
        string_val: "94521"
        string_val: "94022"
        string_val: "95112"
        string_val: "94103"
        string_val: "94541"
        string_val: "94115"
        string_val: "95125"
        string_val: "21401"
        string_val: "94063"
        string_val: "95650"
        string_val: "93292"
        string_val: "94553"
        string_val: "94518"
        string_val: "95111"
        string_val: "94030"
        string_val: "95070"
        string_val: "94118"
        string_val: "94903"
        string_val: "95023"
        string_val: "94541"
        string_val: "94037"
        string_val: "94505"
        string_val: "94403"
        string_val: "95133"
        string_val: "94521"
        string_val: "94952"
        string_val: "94402"
        string_val: "94115"
        string_val: "94002"
        string_val: "94952"
        string_val: "95110"
        string_val: "94110"
        string_val: "94960"
        string_val: "95139"
        string_val: "94117"
        string_val: "94509"
        string_val: "94618"
        string_val: "94107"
        string_val: "95008"
        string_val: "94002"
        string_val: "95126"
        string_val: "94507"
        string_val: "95132"
        string_val: "94517"
        string_val: "94553"
        string_val: "94103"
        string_val: "94010"
        string_val: "95124"
        string_val: "94111"
        string_val: "95127"
        string_val: "94587"
        string_val: "94521"
        string_val: "94037"
        string_val: "94110"
        string_val: "94601"
        string_val: "95051"
        string_val: "94020"
        string_val: "94523"
        string_val: "94065"
        string_val: "94601"
        string_val: "94103"
        string_val: "95122"
        string_val: "94124"
        string_val: "94080"
        string_val: "94105"
        string_val: "95014"
        string_val: "89431"
        string_val: "94591"
        string_val: "95132"
        string_val: "94553"
        string_val: "94301"
        string_val: "94526"
        string_val: "94102"
        string_val: "94063"
        string_val: "94928"
        string_val: "94124"
        string_val: "94118"
        string_val: "94109"
        string_val: "95111"
        string_val: "94105"
        string_val: "94104"
        string_val: "95116"
        string_val: "95002"
        string_val: "95123"
        string_val: "95111"
        string_val: "94605"
        string_val: "95051"
        string_val: "95112"
        string_val: "95123"
        string_val: "95110"
        string_val: "95127"
        string_val: "94028"
        string_val: "94945"
        string_val: "94132"
        string_val: "94002"
        string_val: "94541"
        string_val: "94930"
        string_val: "94531"
        string_val: "94970"
        string_val: "95121"
        string_val: "21401"
        string_val: "94806"
        string_val: "94132"
        string_val: "94965"
        string_val: "94549"
        string_val: "94118"
        string_val: "94531"
        string_val: "94941"
        string_val: "94108"
        string_val: "94521"
        string_val: "95037"
        string_val: "94086"
        string_val: "94904"
        string_val: "97701"
        string_val: "94903"
        string_val: "94518"
        string_val: "94043"
        string_val: "93292"
        string_val: "95037"
        string_val: "94103"
        string_val: "94303"
        string_val: "94066"
        string_val: "89431"
        string_val: "94605"
        string_val: "94607"
        string_val: "94589"
        string_val: "95050"
        string_val: "95012"
        string_val: "94929"
        string_val: "94804"
        string_val: "94112"
        string_val: "94066"
        string_val: "94705"
        string_val: "94102"
        string_val: "94110"
        string_val: "94960"
        string_val: "94530"
        string_val: "94528"
        string_val: "94965"
        string_val: "94601"
        string_val: "95037"
        string_val: "94801"
        string_val: "95124"
        string_val: "95035"
        string_val: "95122"
        string_val: "94803"
        string_val: "94080"
        string_val: "21401"
        string_val: "94946"
        string_val: "94087"
        string_val: "94603"
        string_val: "94301"
        string_val: "94133"
        string_val: "94505"
        string_val: "94621"
        string_val: "95054"
        string_val: "94103"
        string_val: "94563"
        string_val: "95125"
        string_val: "95125"
        string_val: "95023"
        string_val: "94105"
        string_val: "94127"
        string_val: "94121"
        string_val: "94526"
        string_val: "95050"
        string_val: "94805"
        string_val: "94030"
        string_val: "94611"
        string_val: "94134"
        string_val: "94596"
        string_val: "95070"
        string_val: "95030"
        string_val: "95133"
        string_val: "95120"
        string_val: "94549"
        string_val: "94402"
        string_val: "94158"
        string_val: "94526"
        string_val: "94804"
        string_val: "94598"
        string_val: "95112"
        string_val: "94607"
        string_val: "94589"
        string_val: "94519"
        string_val: "95121"
        string_val: "95131"
        string_val: "94015"
        string_val: "95136"
        string_val: "94960"
        string_val: "94945"
        string_val: "94041"
        string_val: "95130"
        string_val: "94080"
        string_val: "94102"
        string_val: "94806"
        string_val: "94611"
        string_val: "94015"
        string_val: "94583"
        string_val: "95121"
        string_val: "94558"
        string_val: "93292"
        string_val: "95118"
        string_val: "94062"
        string_val: "94609"
        string_val: "94589"
        string_val: "94924"
        string_val: "94015"
        string_val: "94558"
        string_val: "94703"
        string_val: "94110"
        string_val: "94503"
        string_val: "95125"
        string_val: "94928"
        string_val: "95023"
        string_val: "94010"
        string_val: "94025"
        string_val: "94806"
        string_val: "95037"
        string_val: "95132"
        string_val: "94621"
        string_val: "94903"
        string_val: "95123"
        string_val: "95476"
        string_val: "95116"
        string_val: "94558"
        string_val: "95054"
        string_val: "94121"
        string_val: "94920"
        string_val: "94401"
        string_val: "95014"
        string_val: "94541"
        string_val: "94502"
        string_val: "94118"
        string_val: "94939"
        string_val: "94619"
        string_val: "94549"
        string_val: "94608"
        string_val: "94806"
        string_val: "95111"
        string_val: "94903"
        string_val: "94801"
        string_val: "94523"
        string_val: "94606"
        string_val: "94030"
        string_val: "94619"
        string_val: "94010"
        string_val: "94015"
        string_val: "95111"
        string_val: "94306"
        string_val: "94109"
        string_val: "94530"
        string_val: "94087"
        string_val: "95110"
        string_val: "94063"
        string_val: "95133"
        string_val: "95127"
        string_val: "95129"
        string_val: "94556"
        string_val: "95121"
        string_val: "94109"
        string_val: "94621"
        string_val: "95123"
        string_val: "94621"
        string_val: "94587"
        string_val: "95135"
        string_val: "94022"
        string_val: "94133"
        string_val: "95135"
        string_val: "94041"
        string_val: "94587"
        string_val: "94121"
        string_val: "94947"
        string_val: "94952"
        string_val: "95002"
        string_val: "94102"
        string_val: "94014"
        string_val: "94608"
        string_val: "94123"
        string_val: "94118"
        string_val: "94903"
        string_val: "94108"
        string_val: "95123"
        string_val: "95118"
        string_val: "97701"
        string_val: "94070"
        string_val: "94553"
        string_val: "94132"
        string_val: "94103"
        string_val: "94024"
        string_val: "94558"
        string_val: "93292"
        string_val: "94563"
        string_val: "94965"
        string_val: "95050"
        string_val: "94605"
        string_val: "94939"
        string_val: "95037"
        string_val: "94503"
        string_val: "94063"
        string_val: "94507"
        string_val: "94521"
        string_val: "94904"
        string_val: "94402"
        string_val: "94608"
        string_val: "94025"
        string_val: "95122"
        string_val: "94105"
        string_val: "94027"
        string_val: "94103"
        string_val: "94304"
        string_val: "95123"
        string_val: "94521"
        string_val: "95030"
        string_val: "94803"
        string_val: "89431"
        string_val: "95032"
        string_val: "95123"
        string_val: "95116"
        string_val: "95121"
        string_val: "94086"
        string_val: "94015"
        string_val: "94043"
        string_val: "90266"
        string_val: "94903"
        string_val: "94123"
        string_val: "94526"
        string_val: "94520"
        string_val: "94506"
        string_val: "94924"
        string_val: "94061"
        string_val: "94598"
        string_val: "95037"
        string_val: "94112"
        string_val: "94086"
        string_val: "94920"
        string_val: "94103"
        string_val: "94010"
        string_val: "94596"
        string_val: "94015"
        string_val: "94595"
        string_val: "94044"
        string_val: "94541"
        string_val: "95037"
        string_val: "94517"
        string_val: "95046"
        string_val: "95051"
        string_val: "94920"
        string_val: "94080"
        string_val: "95134"
        string_val: "95120"
        string_val: "95131"
        string_val: "94404"
        string_val: "94505"
        string_val: "94521"
        string_val: "89431"
        string_val: "95132"
        string_val: "94548"
        string_val: "94506"
        string_val: "95032"
        string_val: "94110"
        string_val: "95134"
        string_val: "94595"
        string_val: "94518"
        string_val: "94505"
        string_val: "95110"
        string_val: "94301"
        string_val: "94402"
        string_val: "94801"
        string_val: "94563"
        string_val: "94517"
        string_val: "95112"
        string_val: "94506"
        string_val: "95120"
        string_val: "94089"
        string_val: "94925"
        string_val: "95051"
        string_val: "94511"
        string_val: "95628"
        string_val: "94105"
        string_val: "94158"
        string_val: "94080"
        string_val: "94061"
        string_val: "97701"
        string_val: "94123"
        string_val: "95124"
        string_val: "94025"
        string_val: "94901"
        string_val: "94061"
        string_val: "93292"
        string_val: "95110"
        string_val: "94941"
        string_val: "94089"
        string_val: "94507"
        string_val: "95070"
        string_val: "94595"
        string_val: "94553"
        string_val: "94598"
        string_val: "94941"
        string_val: "94521"
        string_val: "94121"
        string_val: "94301"
        string_val: "94109"
        string_val: "94080"
        string_val: "94002"
        string_val: "94038"
        string_val: "94608"
        string_val: "94525"
        string_val: "94105"
        string_val: "94952"
        string_val: "94089"
        string_val: "94965"
        string_val: "94132"
        string_val: "93292"
      }
    }
  }
}
node {
  name: "SparseTensor/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\342\006\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "SparseTensor_1/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1762
          }
          dim {
            size: 2
          }
        }
        tensor_contentt\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000~
      }
    }
  }
}
node {
  name: "SparseTensor_1/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1762
          }
        }
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Cooperative"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Cooperative"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Apartment"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Mobile / Manufactured"
        string_val: "Cooperative"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Mobile / Manufactured"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Cooperative"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Multi Family"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Mobile / Manufactured"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Cooperative"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Apartment"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Mobile / Manufactured"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
      }
    }
  }
}
node {
  name: "SparseTensor_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\342\006\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1762
          }
        }
        tensor_content: "\000\326\203H\200\010\006I\200=\022I\200\201\317I\000I\331H`}$J\000\272\333H\300\341dJ@\254\244I\200\305\017I \234\nI\200&\001I@\r\200I\200\313$I\200\021CI\000\257\226H\000\366\245H\200\227\003I\340ZIJ\200\003oI\000\377\221H\340\001CJ\340\3146J\300%0J\000\310\257HLR\tK\000_fH\000\314XI\300\354\023I\000\205\317H\340-\022J\200\345sI\000`\352H\200\273\257H\000X\230G\200>zI\2006(I\360\211\236J\300B\300I\200\260gI\200r\036I\300\373\266I\000\247\363H\300/rH\200\235\264H\000\323\302H\000e\201H\200=\022I\200r\236I\200{\333I\000\024\315H\000\352SI\200cII\300>\214I\000\272EI\000\350\000I\200\000\261I\200a\014I`)\200I\000\275\003H\340\271\333H\000k\375H\200\324aI\340k[J\2005\275I\340\342*I\000|\022J@7\022I\000\2149H\200\276;I\240\343-J\200a\214I\360\305\024L\000B\357H\300W\027I\300\026\361I`H\030J\200\247*I\200a\014J\200\000\261I\200S8I\200a\014I\300\350\316I\000\205\317H\200j\311I\200r\236I\000\234`H\340Z\027I\000\346*H\300\221\236I\300\221\236I\200\202EI\200a\214I\000\247\363H\000\247sI\300\\\222I\200\227\203H\200=\022I\3000\303I\000w\373H\200\271\'J\340#\364H\000\227LI@1wJ\300e\317I@x_H\340-\022J\000\214\271H\200\313\244I\200\000\261I\200\324aI\000\312\005I\000@\034F\200\'iI\200{[I@K\311I\200c\224H\000\247\363Hp:\214J\000\252\210H\200=\222H@\231\274I R\246K\000|\222I\200\305\017I\000\205\317J\200\322\016I@]\306J\2005\275J\000\323\302H\000\0337K\200\231VI\000rgI\340ZIJ\200\211/I\200{[I\300\221\236I\200\3346I\000NmH\200\211/I@/$J\000\024MH\000p\024I\200Q0J\300B\300I\000\261\236J\260G\217J\000\343\351H\240\223dK\000\005\221I\200M9I\300\'\006I`7\006J\000$tJ\340C\006I\300\214\212I\000\263\361H\000PCI\000\205\317I\200\001\034I\000I\331I\000\323\302H\300\364\301I\200a\214I\340b\036J\200a\214I\000\004&I\240\352\027J\300\024\236I\200dJI\000\247\363H@\211\025J\200\333KI\200\t\356J\000`\352H@5\243J\000\312\205H0\227\241J\300\026\361J\000\317\031I\300~\266I\200=\022I\000\312\005I\000\270\210H\200\345sI`\313\275H\200\021\303H\200\333\300I\000\314XI\300e\317I\200\247\252I\200q\345H@\350\032J\200=\022I\300\207\363I@\351\205J\200>\372I\200[\rI\200\332\225H\000\323\302H\200a\014I@T\tJ\200\224\333I\200\000\261I\000\0337I\200,\000I\300R\347I\200\313$I\200\353rI\000\035\215H\000\252\210H@8zI@B\214I\200\371FI\3401\310H\000G\006I\340LCI\300\341dJ\200\314\017I\200\225\255J\200\010\006I\300\252\205I\3009\203I\000\261\236H`\365\020K\200=\022I\200\302\231H\240@\335K\200\237UI\240\002\235H\000o\251I\200\226\230I\300\350\316I\000|\022J\200\305\017I\000Y\003H\340\264\010I\200\313$I\200a\014I\200\016\005I\300\\\222I\000\377\221H\200dJI\300\004\364I\200{[I\000o\251I\300n\217I\000\252\036I\200\037\027I\000\223\243H\200\010\206I\200\027\302I@\254\244I\000\242_H\200{[I\340LCI\200=\022I\200\3346I\000\344TH\000i\252H\020p\331K\300\341dJ\000\373\345H\200a\014I\360\345*I\000\205OI\000)\013I\240\236\325J\200\255)I`H\030J\200\3721I\000\021\340H\000\357gI\000G\206I\000\205OI\300\263\302I`\241\036J\200\353rI\200\276;I\000g\324H\000\250^G\200jII\000\346*I\360{\022I\200\316bI\200\201ZI\000\317\031I\000d\226H\200dJI\000\261\236H\200\351\037I\000\261\036I\3000\303I@\3331I\000\323\302H\000\247\363H\340\206\030J\000X\030I\200{[I\200\0001I\200\222lI\000\375\273H\3000\303I\2006\022I\300\232\333I\000\006yI\200{[I\300~\266I@w\230I\300\355\347H\200\235\202I\000\216\017I\300\263\302I\000\301EI\200%\310H\000\346*J\000i*I\000\033\267H\000\302\260I\200\030\255I\200{[I\200\027BI\300\'\206I\200\010\006I\200c\337I\000\237\010H\200\027BI\000\013\220I`gII\000G\006I\200\226\230J\000\231\363H\200\0001I\340\324VI`QUJ\200\010\006I\340\202lJ@T\211I\200\345sI\000\247sI\370#\364I\000F\033H\000\203`H\200\217.I\000M\205H\000\300\332H\300\317gJ\200T#I\000\346\252I\200LNI\200\246?I\300\2434I\000Y\203H\000|\222I@\254$J\000C\332I\000\2366I\240-CI\000\352SK\200\267QI\000\357\347H@y\007I\200C\021I\000\255\362I\000=\333H\200\251\000I !\303I\000Z\353I\3000\303I\000\'\034H\000G\206I\000\007\344I\000\r\343H@\307^J\200\3346I\000\232\215I\200\313$I\200tqI\200\0001I@B\014J\200\010\006I\000Y\203H\000n\276H\200{[I\200\025lI\300\221\036I\000~\345H\200\371\306I\300E\201I\000\263\361I\000j\025J\000\245\240H\000fiH\000\0337I\000$tH\000$tH\300B\300I\300\006JJ\200\226\030I\300\341\344I R\246J\200,\000I\000\302\260I\200\324aI\200\tnI\000\266\375G\000\361\275H\200FOI\300I\303H\300\252\036I\2407\240J\000\033\267H\300\232\333I\2005\275J\300\252\205I\000\033\267H\000\212\030I@\211\225I\200,\200I\000\373LH\300\003&H`H\030J\200k4I\300\'\206I\000\261\036I\200=\022I\000i\252H \341#J\000\247\363H\200\316bI\0006qI\200\021CI@dII`\223\230I(b\230J\340\342*I\300\r\264J\330\335dK\000\266\375G\200\352\nI\300wLJ\000\252\036I\000\316.H\000\237\010Hp:\214J\000\"!H\320\237\236I@\222\322I\200\266fJ\200\226\030J\200\247*I\000\270\010I\000\0337I\300\035\333I\310\274\343K\200[\rI\000\205\317I\000\323BI\200\nYI\2402\214I\000\333\027J\200j\311I\2005\275I\300\252\205I0m\017J\000\0337K \245\255J\200\010\006I\200=\022I\200\226\230I\300\321\326H@\r\200I\300)\316I\200\255)I\000\346*H\000\247sI\200\235\202I\000\304\006I\000\013\220I\200\217.I\0002HJ\000\216\017I\000\272[I@R3I\300\337\221I\300\337*I\200\235\002I\300B\300J\000\243\312H\200\305%I\200=\022I\340\001CJ\000\323\302H\200\tnI\300\026qK\000@\234H\300\344\232I`+SI\300\243\033J\200N\303H\000+\336H@$\221I\000K\257H`H\030J\300\024\236I\000\205\317H\000\223#I\000b@I\000\257/H\000\024\315H\000G\206H\000\0337I\200\0001I\200\021CI\200\255)I\300g\276H\200\003oI\000=[I\3000\303I\300\265\030I\360\211\236J\200\251gI\200\266\346I\000t\275H\340\027\267I\000$\333H\000\247\363H\000\234`H\000K\257H\000yQI\200[\rI\000\350\375G\340x\022I\200\177\271H\300~\266I\200\021CI\000$tH 3@J\200r\236I\200\237\325J\240?\362J\300\263\302I\340C\006I`\326*J\000P\303H\200\260gI\000\232\rH\000\033\267H\200tqI\200,\200I\340j>I@\265\341I\200k4I\200FOI\000\262\tI\300\035\364H\000\244\265I0\314\255J\360\311\244I\200\304:I\340Q\014J\000\320\204H@S\236I\200\360\tI\000n>I@(\272I\000g\324H\200,\000I`QUJ\000\223\243I\000\017\271H\000)\213H\200\343 I\000\357\347H\000\372\372H`\235rK\300\306\252I\200\220\031I\300\r4J`\023\014J@(\272K\000=\333H@w\230I\000\261\036I\200\3346I\200\343 I\000\232\215H\000\243\312H\200\217`I\200\001\234I0.\323I\200?eI\200\213\005J@\352\355I`{\022I\000\247\363H@\275\220H\000\267\356H\200[\rI\200\345sI\300\221\236I\000\260\263H\000\344TJ\000\\\301G\300\306\252I\300~OI\200\362\\I\200\211/I\000\370\247H\000\316.H@w\230I\300e\317I\200\000\261I \247\321H\000\016\316I\200\226\230I\200\324\341I\000\377\021I\300\306*I\000=\333H\200,\000I\000\270\210H@{\301I\300\207\363I\200\003oI\200>\372I\000\010OI\000\0337I@\r\200I`\2620J\000~\345H\200{[I\000\001\345H\000C\332I`}$J\000\241[H\240\256!J\300\353\217I\200\001\006I\340\3600J`\023\014J\200\352\nI\000\261\036I\000e\201H\000\013\220H@Y\235I\000\205\317H\340C\006I\000\033\267H\300n\217I@K\311I\300\"\364H\240\231\343H\200=\022I\300\223\rI\200r\036I\300@\006I\000w\373H\000\323\302H\000\0337H\300n\217I\360\374\363J\000\024\315I\300\252\036I\000i\021H\200\237UJ\000\272\333H@\363\255I\000GjH\000|\222I\200\010\006I\000\247\363H`7\006J\340b\036J\200\3346I\000|\222H\240U\033J\200\256\224I\2005=I\200\363GI\000R\031I\000\261\036I\000\316.H\000Y\203H\340\240gJ \207\262J\300\306\252I\000/\333H\000\0337K\200\226\030I\300\006cI\000\0337I\360\224\230I\200F\317I\000$tH\000\377\221H\000\276\007H\000$tH\300\026\361I\300~\266I\200\037\027I\000\"\241Hp:\214J\000\247\363H\200k4I\340 tI\200\023\313H\000\362\363G\000.\352G\000\346*J\000\337@I\000\0337I\2005=I\300\337\221I@\350\232I\000\317\031I\200:\352H\000\336UH\000u\022I\200\217\340H\300\330\'J\000\357gI\200\000\261I\200\324aI\200\360\tI\300\006\343H\200c\337I\200\226\030J\300\243\033J\000\261\236I\340LCI\200\255)I\000l\350G0\334\324J\300K}J\300\223\rI\200\3425I`\300\204J\340 tI\000*sHp\257\236I\000)\013J\000\343\351H\000PCH\200\237\325I\300\374\241I\000\'\034H\000~\345I\000\227\314H\200\0001J\200\313\244I\000\024\315H\200\227\003I\200\3721I\200\010\006I\200\237UI\200\324\341I@\363\255I\000\216\017I\000\205\317H\200jII`\224\265J\300~\266I\200\360\273H\000\247\363H\200\226\230I\360\0327I\000\357gI0\323\027L\200\247*I\200\316bI\300\337*I@B\214I\2005\275J\300\337*I\000P\303H\000\317\031I@B\214I\000\n%H`\372\256H\200\267QI\000\357gI\000\223#I\300B@J\340\370\005J\200\034\213H\000@\034H\200t[I\300K\375I\000gTI\000|\222I\000\356|H\360{\022I\340\266[I\340\325sJ\000k\375H\340-\022J\000\375;I\340\370\005J\000\306\362I`\013\267J\000;\010H\000~\345H@8aJ\200\3721I\200M9I\000\014\370HpN\303I\000W\255H\000\366QH\200\201ZI\000*sH\000\261\036J\300\254\330J\300\221\236I\000.=I\200 \002I\000\247sI\000\205OI\000y\321H\200\021CI\200{[I\000\240\214H\360\374\363J`\224\265J\200j\311I@\303\265I\000\353%H\000\301/I \301\353H\000\352SI\000\t!H\300\026qJ\300I\252I\200\237\325I\000|\222I\000\252\264H\200\333KI\340#\364H\200r\036I\000\026#I\000\247sI\300\'\006J`\376MJ\340Q\014J@\254\244I\360\363\266J\000\0337I\300I\252I\200\313$I\000\316.H\000\271pI\000G\206H\000y\321H\200tqI\000\'\034H\000[\326H\000*sH`H\030J\360\0327I\200\t\356I\200\3425I\300\207\363I\000\0337I\000\313mI\000\357gI\000\033\267J\000\245\240H\000+\336I\000K\257H\000\205OI\000F\033H\200\010\206I\000\024\315H\200F\317I\200\237UI@\207\rI\200\324\341I\200{\333I\360\316\031I@\036\022I\340\3146J\200\313$J\000\323\302H\000w\373H\200,\000I\340\246\363H\000G\206I\300\330\'K\200?eI\340Z\311I\200\tnI\200?eI\200\247*I\000CZH\000\354\251H\300\035\333I\200\000\261I@\3720I\200\027BI\300\364\301I\200C\021I\000\020$J@\334\234I\360\307/I\200\237UI@\r\200I\000$tJ\000e\001I\300@\006I\000\346*I`\304-K\000\352SI\000\346*I\000\261\036I\200=\022I\200\352\nI\300\033!I\300I\303H\240\326DK\000\223\rI\000\357gI\000*sH\200{[I\340\304/Ip\257\236I\200C\021I\300\317\003I\300\373\266I@\222\322I\300ICI\000\206[I\200\246?I\000\035tI\000\2228H\000\026\364H\300\230\215H\360\316\031I\000\353%H\200\177\007I\000IYI\200\010\006I\000\247sI\000Q\256H\200\230kI\000\330VI\200\345\363I\340-\022J\200\010\006I\200\267QI\200\177\271H\200\0001I\200\027\364H\300\0247I\300\'\206I\200\3346I\277\330\'K\200LNI\300wLJ\300u\222I\200,\200I\300\'\206I\340\3146J\000\334\202J\000\320\204I\000\357gJ\300\232[I\300\\\222I\300I\303H\200\237UI\000|\022H\000\005\221H\200\3721I@\303\265I\200tqI\000\214\271H\000\nCI \310\274J\000\324\255G\200j\311I\000$tJ\300>\214I\000\377\221H\200(TI\000\272[H\200F\317I`\316\021J\000PCH`\241\036J\200=\022I\000e\001I\200\343 I\300\277\265I\200\237UI\000n\276H\300\'\006J\000\277VH\000Q\256I L\353H\000\330VH\300\221\036J\2005\275I@\211\025J\000P\303I\200a\014I\340\304aJ\200\324aI\000\'5H\360\235\325I\000|\222I\300\221\236I\000\032LH\200=\022I\200\322\016I\340\304aJ\300\024\236I\000\226\341I\000G\206I@\017\323I\000\302\260I\000P\303G\300\004tJ\300I\252I\340b\036J\000\377\221H\000\316\256H\300\221\236I\270\223\220K\200,\200I`QUJ\200T#I\000\261\036J\000\001\345H\200M9I\200a\014I\000\261\236H\300\'\206I\000i*I\000\004&I0[\222I\200\247*I\200r\036I\200\021CI\000\300\332H\300\317\347I\000\300\332H\300\330\247J\340\255\036I\200,\000I\340\226\rI\300\243\233I\000\024\315I\200M\271H@\200\325I\000\261\236H\300\364\301I@w\230I\000\004\246H@\276\241I8\256\026L\200\342\265I\200\327\324H@\374\352I@(:J\000\314XI\300I\252I\000\207\245H\300\337\221I\000,\311I\360\260\036I\200{[I\360\271[I\240\267^J\000\361\275H\374#tJ\200\260gI\200,\200I\200\313\244I\2005=I\000\227\314H\200\027BI@\003\325I\200\314\017I@Y\235I\3000CI\300\263\302I\000\272\333H\300\350\316I\340\034\200J\300\024\236I\000\247\363H\000\223#I`uOJ@F5J\300I\252I\200\001\034I\000\316\030I\000#\214I@]\306I\000i*I\200\235\002I\300u\022I\000\001eH\000\254\nI\000\320\204I\000\017\271H\000\305\356Hx\0077K\300\366\273H\000\323\302H\200jII\300\223\rI\000\214\271H\000\334\177I\000\033\267I\000\356|H\000X\030I\000$\364I\200=\022I\340ZIJ\000\346\252I\000\\\332I\200k\264I\000\r\267H\000\232\rI\200\226\030I\000\366\245H\000 KI\200tqI\000\317\231I\340LCI\000\205\317H\000\252\210H\370z\030J\200S\352H\000\361\275H\000\231\363H\200jII\3009\203I\200\334\266I\200\226\030I@T\tK\300\232\333I\000=\333H\2005=I\200\345sI\000\227\314H\200\021CI\200\345sI\200FOI\000G\352H\000\035\215H\000\323BH\200\237UJ\340\325sJ\000\364\373G\000\330VI@\3410J\270@\tK\300\'\206I\300\252\005J\200,\200I\200\226\230I\000\366\321J\000G\206I\200\247*I@\021\251I\200{[I\3000\303I\000x\346I\2407 K\200\276%I\240\336\370H@\r\200I@\003UJ\000\223\rI\200C\303H\000\350}H\000\373LH\000G\006Ipo\230J\000\207%I\200\003oI`\315\352I\000\0337J\000)\013I`\365\220K\200H\017I\260\261\247J@w\030J\000E0J\300\024\236I\000PCJ\200\3346I@\240\246I\000 \313G\340\325sJ\200jII\000\377\021I\000\205\317H\000;\210H\000\245\240H\000\207%H\000\272[I\260\272\344J\000\317\003I\200\237\325I\300\330\247I\000\247\363H\200\246?I\200\3346I\200\260gI\200\237\325K\000GjH\360#tI\200L\316I\000|\022H\000G\006I\200\0001I\200\237\325I\000rgH\200\353rIh\320\217K\200\333\375H\200\304:I\000b@I\200\311\203H\000\305\356H\200/>I\000e\201I\000i*I`\2620J\300\223\215H\200a\014J\200\227\003I\200\255)I\200\255\333H\300\337*I\200\220\031I\200\260\347I\300\353\217I\000@\234H\200\3346I\000\377\021I\000`jGpo\230J\300~\266I\000\257/H\200\010\006I\200\371FI\200\237UJ \263\201K\000|\222I\200k\036I\000\377\221H\200{[I\300\221\236I\200\335\241I\000\272\333H\300\"\013I\000\321\354H\000n>H\200\3346I\200a\214I\0007\303G O\232I\374\0327J\000|\222I\000\247\363H\000\323\302H\000\247sI\000\323\302H\000\037`K\300\337\221I\000\017\271H\000@\234H\000\224\216I\300\026\361I\000\2214H\200\3721I\200\3346I\300\317\003I\000\261\036I`\0137J\200{[I\000\357\347H\2005=J\000\261\236H`\326*J\200,\200I\000\"!H\000\0179H\300\3736J@T\211I\000\346*J\360\306\336I\200<\247I\000\'\034H\000\263\361H\200\3425J@$\221I\340\001CJ\300\330\'J\000\034\242H\200=yI\200\021CI\200\313\244I@\370\266I\000\330\252H\200\247*I\000@\234H\0009\262I`\365\020J\200=\222I\000\323BI\300\205\240I@\r\000J\200\226\030J\000\352SI@\363\255I\200\037\027I\200\237UI\200\027BI\200r\236I\200jII\200\021\303I\020\2344I\000y\321H\000\346\252I@\027\250I\000\223\243H\200,\000I\200\340\224H\000usJ@\265\341I\3009\003J\000\261\036I\000\"\241H0[\222I\200,\200I@\211\025J\300~\266I\000G\206I\000\326\345I\340\240gJ\300n\217I\000\355\024I\200\003YI\3009\203I\300\323\023K\000PCI\200jII\000\337\300H\300I*J\200{[I\000PCI\000Y\203H\000\344\324G\200\304\354H\300\337*I\000)\213H\000fiH\200\276;I\000IYI\340\370\005J\200\226\230I\200\367\245H\200\010\006I\300~\266I\200\0001I\200\334\266I\000\2741I\000^\227H\200M9I\300\306\252I\340\001CJ\200O\017J\360\0327I\000\247sI@\021\251I\340\370\005J\200\240@I\000\0337J\000i\252H\200,\000I\200EdI0\372\266I\260\330\273I\340\201OI\000G\206I\200{[I\000\346*I\200\3721I\300\035\333I\300\317\347I\000\005\221I@{\301I\000\320\204I\000\261\236I\200=\022I`\023\014J\340\370\005J\200\3346I\000\227LI\200\010\006I\200\220\031I\370\271\333I\000$\364J\300\353\217I\200\217\340H\300\252\205I\200\240@I\300\'\206I\200\226\030J\000\272[H\000|\022H\000\366QI\200\351\037I\310\177\205K\340\0277I\200jIJ\200\324aI\340\030TJ\200=\022I@T\tJ\300\'\206I\000g\324H\270@\tK\000\334\177I\000.\352G\000c\022H\200\005EI\000\340\253G\000\323\302H\200\010\006I\200\3721I\200\021CI\000\377\021I\000\216\017I@\036\222J\200FOI\000}/I@\317\263I\200\3721I@\211\225I\300Y\352H\000\261\236I\000^\027H@\306sI\200dJI\000C\332I@\341\260I\300~\266I\200x\235I\000\261\236H\200j\311I\300\035\333I\340\304/I\300\221\236I\000%\337I\300\330\'J\000\241[H\200\3346I\000\346*I\200\010\206I\000\035\215Hp(TI\200\237\325I\000\004\020I\000\n\245H\000GjH\300\0247I\000\357\347H\000\375\273H\000\337\300H\200\260gI\000\321lI\340O\303H\200\237UI\000\323\302H\200x\235I\200\003oI\000G\206I\200\t\356I\200/>I\200\000\261J\000\205\317H\000\357\347H\360\316\031I\000\267\356H\000\247\363H\200\304:I\200%\026I\300\035\364H\200\237\325I\200\352\212H\200\201ZI@T\211J\000\017\271H\340y\257J`\206aJ\2005=I\000G\206H\200T\rI\300\024\236I\200\227\003I\000\242_H\2000\251I\200\007\315H\000\320\204I\200\tnI\200\325LI\200\247*I\300\221\236I\000u(I\200\300\021J\200\027BI\200\247*I\300\375\245H\340\217UJ\300\350NJ\200!TI\340\230\340I`H\030J\300\306\252I\300\243\233I@~\202I\000u\250H\000\0337I\300\252\205I\000Y\003I\000\300\332G\340\036!I\000\006\356I\0002\310H\200\021CI\000\2741I\000n>I\2005=I\000\232\215H\000\261\236I\200\027BI\300\'\206I\000=\333HP\343;I\200\021CIp\"tI\200\3346I\300\004tI\000\366QH\300\243\233Ip\005\200J\000r\347H\000\323\302H\300\263\302I\000\010OI\3009\034I\000\357gI\300~\266I\200\314\017I\200\231VI\000\007\344H\000k\375H\2005\275J\000\016\316I\000\341\226H\300>\214I\200\201ZI\000\303\233H\000\205OI\200\tnI\000\rMI\200&\001I\260\203\205J@\263\216I\200\342\265I\240\002\224J\360\345*I@\254\244I\200\352\nI\200\211/I\200\313$J@\222\322I\200\201ZI@z\022J\000G\006I\000\017\271H\000\231\"I\000\310\257H\340\213\271H\200\324aI\200\3346I\000\321lJ\000\323\302H\340\3146J\200\240*I\000VBH\000\340\253E\200\260gI\200r\036I\000\357\347I\370\271\333I\200\nYI\000\247sI\340#\364H\200\345\363I\000\024\315H\300\'\206I\200\237UJ\000\346\252H\000-4I\000\013tH\200o\022H\000\016\316I@B\014J@T\tJ\0002\310H\000G\006J\000\001\345H\200\227\003I\000\034\242H\300n\217I\000\245\240H\000\r\343H\000\370\'I\200\371FI@\276\241J\000\346\252I\000\037\340H R\246J\000m=I\200<\'I\200\332\225H\200,\000J\200\007\033I\000\2524I\200,\200I\300|\340I\000\272[H\000\341\226H\000\376\246I\200,\000I\0006qI\000\361\275H\000^\027J\340\324VI\000_\377H\000BoH@w\230I\200\3721I`}$J\000G\206I\000\375\273H`\023\014J\340\2464I\200{[I`\273mJ\240\326\304J \263\001K\000-\264H\000e\201H`H\030K\300Y\352H\000)\213H\300\'\006J@B\214I\200\316bI\000F\033H\000\024\315I\200=\022I\0006qI@\341\260I\200\363GI06\306J\200a\014I\200\253\010H\200\tnI\200\t\356J\3009\003J\300\221\236I\200T\243I\300e\317I`9\'I06\306J\360\363\266J \263\001K\200,\000I\000\323\302H\200\313$I\200FOI\000\247\363H\360\335UI\3000\303Ip\257\236I\000\243JI\3000\303I\000\234`I\000\"!H\300\350\316I\200\273/H\000o\251I@\370\266I\000\2149I\0007CH\200\345sI\200C\221I\300\252\236I\200\363\307I\300\207\363I\000\257/H\000\247\363H\200\3721I\000\265\307H\000\261\036Ipo\230J@K\311I\200r\036I`\241\036J\300\252\205I\000s9H@\021\251I\300\263\302I@$\206I<T\tJ\200/(I\000\377\221H\000\350\375H\300\221\236I\200o]I\200=\022I`.FJ\000\2524H\300\035\333I\000\261\236I\000\331\301I`;/I\300l\271I\300#tH\000:\204I@\316aI\000^\227H`H\030JP*\325J\2005\275I\200=\022I\340\266[I\200a\214I\200a\014I\300\207\363I \265TJ\260\272\344J\000rgI@w\030J\200=\022Ip\360\tI`\013\005I\200\t\356I\200%\026I\000\356|H0-\tK\200\021CI\300E\232H"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\342\006\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/reshape"
  op: "Reshape"
  input: "Const_2"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/bucketize"
  op: "Bucketize"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "boundaries"
    value {
      list {
        f: 0.0
        f: 200.0
        f: 400.0
        f: 600.0
        f: 800.0
        f: 1000.0
        f: 1200.0
        f: 1400.0
        f: 1600.0
        f: 1800.0
        f: 2000.0
        f: 2200.0
        f: 2400.0
        f: 2600.0
        f: 2800.0
        f: 3000.0
        f: 3200.0
        f: 3400.0
        f: 3600.0
        f: 3800.0
        f: 4000.0
        f: 4200.0
        f: 4400.0
        f: 4600.0
        f: 4800.0
        f: 5000.0
        f: 5200.0
        f: 5400.0
        f: 5600.0
        f: 5800.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/ToInt64"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/bucketize"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 31
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/ToInt64"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\037\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/reshape_1"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/one_hot"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 31
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 6
          }
        }
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Cooperative"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Townhouse"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/range/start"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/Size"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/hash_table/hash_table"
  op: "HashTable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/table_init"
  op: "InitializeTable"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/Const"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/Cast"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/hash_table/hash_table"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup"
  op: "LookupTableFind"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/hash_table/hash_table"
  input: "SparseTensor_1/values"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/hash_table/hash_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.408248305321
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Initializer/truncated_normal/TruncatedNormal"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Initializer/truncated_normal"
  op: "Add"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Initializer/truncated_normal/mul"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/read"
  op: "Identity"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice"
  op: "Slice"
  input: "SparseTensor_1/shape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice/begin"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Prod"
  op: "Prod"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Gather"
  op: "Gather"
  input: "SparseTensor_1/shape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseReshape/new_shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Prod"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Gather"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseReshape"
  op: "SparseReshape"
  input: "SparseTensor_1/indices"
  input: "SparseTensor_1/shape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseReshape/new_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseReshape/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/GreaterEqual"
  op: "GreaterEqual"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseReshape/Identity"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Where"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Where"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Gather_1"
  op: "Gather"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseReshape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Gather_2"
  op: "Gather"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseReshape/Identity"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Identity"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice/pack"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice/pack_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/range/start"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Cast"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Cast_1"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_1/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_1/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_1/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_1"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Gather_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_1/pack"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_1/pack_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_1/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/ListDiff"
  op: "ListDiff"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Cast_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_2/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_2/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_2/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_2"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Identity"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_2/pack"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_2/pack_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_2/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/ExpandDims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/strided_slice_2"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/SparseToDense/sparse_values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/ListDiff"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/SparseToDense/sparse_values"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/ListDiff"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/concat"
  op: "Concat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/concat/concat_dim"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Reshape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/zeros_like"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/ListDiff"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Fill"
  op: "Fill"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Shape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/concat_1/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/concat_1"
  op: "Concat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/concat_1/concat_dim"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Gather_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/concat_2/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/concat_2"
  op: "Concat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/concat_2/concat_dim"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Gather_2"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/SparseReorder"
  op: "SparseReorder"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/concat_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/concat_2"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/SparseReorder"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/strided_slice/pack"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/strided_slice/pack_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Unique"
  op: "Unique"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/SparseFillEmptyRows/SparseReorder:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup"
  op: "Gather"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/read"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup"
  op: "SparseSegmentMean"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Unique:1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Cast_1"
  op: "Cast"
  input: "SparseTensor_1/shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice_1"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Cast_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice_1/begin"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice_2"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Shape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice_2/begin"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/concat"
  op: "Concat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/concat/concat_dim"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Slice_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Reshape_1"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/lookup"
  op: "StringToHashBucketFast"
  input: "SparseTensor/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 1000
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/SparseToDense"
  op: "SparseToDense"
  input: "SparseTensor/indices"
  input: "SparseTensor/shape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/lookup"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Equal/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Equal"
  op: "Equal"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Rank"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Equal"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/switch_t"
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/switch_t"
  input: "^dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Tensor should be of shape: [batch, max num multivalent values]"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Equal"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Equal"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/Assert/Switch"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/switch_f"
  input: "^dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/control_dependency_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/one_hot/Const"
  op: "Const"
  input: "^dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/one_hot/Const_1"
  op: "Const"
  input: "^dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/one_hot/depth"
  op: "Const"
  input: "^dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/one_hot/on_value"
  op: "Const"
  input: "^dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/one_hot/off_value"
  op: "Const"
  input: "^dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Assert/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/SparseToDense"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
          dim {
            size: 1000
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/one_hot"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1000
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/bathroom/reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\342\006\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/bathroom/reshape"
  op: "Reshape"
  input: "Const_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/bathroom/reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/bedroom/reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\342\006\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/bedroom/reshape"
  op: "Reshape"
  input: "Const"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/bedroom/reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  op: "Concat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat/concat_dim"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/reshape_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Reshape_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Sum"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/bathroom/reshape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/bedroom/reshape"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1043
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/hiddenlayer_0/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\342\006\000\000\023\004\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/hiddenlayer_0/unpack"
  op: "Unpack"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1043
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\023\004\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0754851326346
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0754851326346
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_0/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/hiddenlayer_0/MatMul"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  input: "dnn/hiddenlayer_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "dnn/hiddenlayer_0/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_0/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/hiddenlayer_0/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/MatMul"
  input: "dnn/hiddenlayer_0/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "zero_fraction/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/Cast"
  op: "Cast"
  input: "zero_fraction/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction/Mean"
  op: "Mean"
  input: "zero_fraction/Cast"
  input: "zero_fraction/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_0:fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "zero_fraction/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_0:activation"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/hiddenlayer_1/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\342\006\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/hiddenlayer_1/unpack"
  op: "Unpack"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.547722578049
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.547722578049
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_1/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/hiddenlayer_1/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "dnn/hiddenlayer_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "dnn/hiddenlayer_1/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_1/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/hiddenlayer_1/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/MatMul"
  input: "dnn/hiddenlayer_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_1/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "zero_fraction_1/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/Cast"
  op: "Cast"
  input: "zero_fraction_1/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_1/Mean"
  op: "Mean"
  input: "zero_fraction_1/Cast"
  input: "zero_fraction_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_1:fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "ScalarSummary_1"
  op: "ScalarSummary"
  input: "ScalarSummary_1/tags"
  input: "zero_fraction_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_1:activation"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/logits/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\342\006\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/logits/logits/unpack"
  op: "Unpack"
  input: "dnn/logits/logits/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/logits/weights/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.73854893446
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.73854893446
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/weights/part_0"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/read"
  op: "Identity"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights"
  op: "Identity"
  input: "dnn/logits/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/logits/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "dnn/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/logits/biases/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/biases/part_0"
  input: "dnn/logits/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/read"
  op: "Identity"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/biases"
  op: "Identity"
  input: "dnn/logits/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/logits/BiasAdd"
  op: "BiasAdd"
  input: "dnn/logits/logits/MatMul"
  input: "dnn/logits/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "zero_fraction_2/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_2/Equal"
  op: "Equal"
  input: "dnn/logits/logits/BiasAdd"
  input: "zero_fraction_2/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/Cast"
  op: "Cast"
  input: "zero_fraction_2/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_2/Mean"
  op: "Mean"
  input: "zero_fraction_2/Cast"
  input: "zero_fraction_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary_2/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "logits:fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "ScalarSummary_2"
  op: "ScalarSummary"
  input: "ScalarSummary_2/tags"
  input: "zero_fraction_2/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "logits:activation"
      }
    }
  }
}
node {
  name: "HistogramSummary_2"
  op: "HistogramSummary"
  input: "HistogramSummary_2/tag"
  input: "dnn/logits/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "centered_bias_weight"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "centered_bias_weight/Assign"
  op: "Assign"
  input: "centered_bias_weight"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "centered_bias_weight/read"
  op: "Identity"
  input: "centered_bias_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "centered_bias_weight/read"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ScalarSummary_3/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "centered_bias_0"
      }
    }
  }
}
node {
  name: "ScalarSummary_3"
  op: "ScalarSummary"
  input: "ScalarSummary_3/tags"
  input: "Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BiasAdd"
  op: "BiasAdd"
  input: "dnn/logits/logits/BiasAdd"
  input: "centered_bias_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1762
      }
    }
  }
}
node {
  name: "strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice/pack"
  input: "strided_slice/pack_1"
  input: "strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Tile/multiples"
  op: "Pack"
  input: "strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Tile"
  op: "Tile"
  input: "centered_bias_weight/read"
  input: "Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Pack"
  input: "strided_slice"
  input: "Reshape_1/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "Tile"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "centered_bias/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "centered_bias/ExpandDims"
  op: "ExpandDims"
  input: "Const_3"
  input: "centered_bias/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "centered_bias/sub"
  op: "Sub"
  input: "Reshape_1"
  input: "centered_bias/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "centered_bias/Square"
  op: "Square"
  input: "centered_bias/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "centered_bias/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "centered_bias/training_loss"
  op: "Mean"
  input: "centered_bias/Square"
  input: "centered_bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/centered_bias/training_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\342\006\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Tile"
  op: "Tile"
  input: "gradients/centered_bias/training_loss_grad/Reshape"
  input: "gradients/centered_bias/training_loss_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\342\006\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Prod"
  op: "Prod"
  input: "gradients/centered_bias/training_loss_grad/Shape"
  input: "gradients/centered_bias/training_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Prod_1"
  op: "Prod"
  input: "gradients/centered_bias/training_loss_grad/Shape_1"
  input: "gradients/centered_bias/training_loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Maximum"
  op: "Maximum"
  input: "gradients/centered_bias/training_loss_grad/Prod_1"
  input: "gradients/centered_bias/training_loss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/floordiv"
  op: "Div"
  input: "gradients/centered_bias/training_loss_grad/Prod"
  input: "gradients/centered_bias/training_loss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Cast"
  op: "Cast"
  input: "gradients/centered_bias/training_loss_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/truediv"
  op: "Div"
  input: "gradients/centered_bias/training_loss_grad/Tile"
  input: "gradients/centered_bias/training_loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/Square_grad/mul/x"
  op: "Const"
  input: "^gradients/centered_bias/training_loss_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/centered_bias/Square_grad/mul"
  op: "Mul"
  input: "gradients/centered_bias/Square_grad/mul/x"
  input: "centered_bias/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/centered_bias/training_loss_grad/truediv"
  input: "gradients/centered_bias/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/Shape"
  op: "Shape"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\342\006\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/centered_bias/sub_grad/Shape"
  input: "gradients/centered_bias/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/Sum"
  op: "Sum"
  input: "gradients/centered_bias/Square_grad/mul_1"
  input: "gradients/centered_bias/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/centered_bias/sub_grad/Sum"
  input: "gradients/centered_bias/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/centered_bias/Square_grad/mul_1"
  input: "gradients/centered_bias/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/Neg"
  op: "Neg"
  input: "gradients/centered_bias/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/centered_bias/sub_grad/Neg"
  input: "gradients/centered_bias/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/centered_bias/sub_grad/Reshape"
  input: "^gradients/centered_bias/sub_grad/Reshape_1"
}
node {
  name: "gradients/centered_bias/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/centered_bias/sub_grad/Reshape"
  input: "^gradients/centered_bias/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/centered_bias/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/centered_bias/sub_grad/Reshape_1"
  input: "^gradients/centered_bias/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/centered_bias/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Shape"
  op: "Shape"
  input: "Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/centered_bias/sub_grad/tuple/control_dependency"
  input: "gradients/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/pack"
  op: "Pack"
  input: "Tile/multiples"
  input: "gradients/Tile_grad/Shape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/Rank"
  op: "Rank"
  input: "gradients/Tile_grad/pack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/sub"
  op: "Sub"
  input: "gradients/Tile_grad/transpose/Rank"
  input: "gradients/Tile_grad/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/Range"
  op: "Range"
  input: "gradients/Tile_grad/transpose/Range/start"
  input: "gradients/Tile_grad/transpose/Rank"
  input: "gradients/Tile_grad/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/sub_1"
  op: "Sub"
  input: "gradients/Tile_grad/transpose/sub"
  input: "gradients/Tile_grad/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose"
  op: "Transpose"
  input: "gradients/Tile_grad/pack"
  input: "gradients/Tile_grad/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Reshape"
  op: "Reshape"
  input: "gradients/Tile_grad/transpose"
  input: "gradients/Tile_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/range"
  op: "Range"
  input: "gradients/Tile_grad/range/start"
  input: "gradients/Tile_grad/Size"
  input: "gradients/Tile_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Reshape_1_grad/Reshape"
  input: "gradients/Tile_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Sum"
  op: "Sum"
  input: "gradients/Tile_grad/Reshape_1"
  input: "gradients/Tile_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "centered_bias_weight/Adagrad"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "centered_bias_weight/Adagrad/Assign"
  op: "Assign"
  input: "centered_bias_weight/Adagrad"
  input: "Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "centered_bias_weight/Adagrad/read"
  op: "Identity"
  input: "centered_bias_weight/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adagrad/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "Adagrad/update_centered_bias_weight/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "centered_bias_weight"
  input: "centered_bias_weight/Adagrad"
  input: "Adagrad/learning_rate"
  input: "gradients/Tile_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adagrad"
  op: "NoOp"
  input: "^Adagrad/update_centered_bias_weight/ApplyAdagrad"
}
node {
  name: "ExpandDims/dim"
  op: "Const"
  input: "^Adagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims"
  op: "ExpandDims"
  input: "Const_3"
  input: "ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "BiasAdd"
  input: "ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Square"
  op: "Square"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  input: "^Adagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training_loss"
  op: "Mean"
  input: "Square"
  input: "Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_1/dim"
  op: "Const"
  input: "^Adagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims_1"
  op: "ExpandDims"
  input: "Const_3"
  input: "ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "BiasAdd"
  input: "ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Square_1"
  op: "Square"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  input: "^Adagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss"
  op: "Mean"
  input: "Square_1"
  input: "Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary_4/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary_4"
  op: "ScalarSummary"
  input: "ScalarSummary_4/tags"
  input: "loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_1/Fill"
  op: "Fill"
  input: "gradients_1/Shape"
  input: "gradients_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/Fill"
  input: "gradients_1/training_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\342\006\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Tile"
  op: "Tile"
  input: "gradients_1/training_loss_grad/Reshape"
  input: "gradients_1/training_loss_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\342\006\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Prod"
  op: "Prod"
  input: "gradients_1/training_loss_grad/Shape"
  input: "gradients_1/training_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Prod_1"
  op: "Prod"
  input: "gradients_1/training_loss_grad/Shape_1"
  input: "gradients_1/training_loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/training_loss_grad/Prod_1"
  input: "gradients_1/training_loss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/floordiv"
  op: "Div"
  input: "gradients_1/training_loss_grad/Prod"
  input: "gradients_1/training_loss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Cast"
  op: "Cast"
  input: "gradients_1/training_loss_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/truediv"
  op: "Div"
  input: "gradients_1/training_loss_grad/Tile"
  input: "gradients_1/training_loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Square_grad/mul/x"
  op: "Const"
  input: "^gradients_1/training_loss_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/Square_grad/mul"
  op: "Mul"
  input: "gradients_1/Square_grad/mul/x"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Square_grad/mul_1"
  op: "Mul"
  input: "gradients_1/training_loss_grad/truediv"
  input: "gradients_1/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\342\006\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\342\006\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/sub_grad/Shape"
  input: "gradients_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients_1/Square_grad/mul_1"
  input: "gradients_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/sub_grad/Sum"
  input: "gradients_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/Square_grad/mul_1"
  input: "gradients_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/sub_grad/Neg"
  input: "gradients_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/dnn/logits/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/dnn/logits/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/sub_grad/Reshape"
  input: "dnn/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/dnn/logits/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "gradients_1/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/dnn/logits/logits/MatMul_grad/MatMul"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dnn/hiddenlayer_1/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/dnn/hiddenlayer_1/hiddenlayer_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "dnn/hiddenlayer_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/dnn/hiddenlayer_1/hiddenlayer_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "gradients_1/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/dnn/hiddenlayer_1/hiddenlayer_1/MatMul_grad/MatMul"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dnn/hiddenlayer_0/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/dnn/hiddenlayer_0/hiddenlayer_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "dnn/hiddenlayer_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1043
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/dnn/hiddenlayer_0/hiddenlayer_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  input: "gradients_1/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ShapeN"
  op: "ShapeN"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/size_bucketized/reshape_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Reshape_1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/zipcode_one_hot/Sum"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/bathroom/reshape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/bedroom/reshape"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat/concat_dim"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ShapeN"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ShapeN:1"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ShapeN:2"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ShapeN:3"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ShapeN:4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/Slice"
  op: "Slice"
  input: "gradients_1/dnn/hiddenlayer_0/hiddenlayer_0/MatMul_grad/MatMul"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ConcatOffset"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 31
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/dnn/hiddenlayer_0/hiddenlayer_0/MatMul_grad/MatMul"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ConcatOffset:1"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/Slice_2"
  op: "Slice"
  input: "gradients_1/dnn/hiddenlayer_0/hiddenlayer_0/MatMul_grad/MatMul"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ConcatOffset:2"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1000
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/Slice_3"
  op: "Slice"
  input: "gradients_1/dnn/hiddenlayer_0/hiddenlayer_0/MatMul_grad/MatMul"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ConcatOffset:3"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ShapeN:3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/Slice_4"
  op: "Slice"
  input: "gradients_1/dnn/hiddenlayer_0/hiddenlayer_0/MatMul_grad/MatMul"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ConcatOffset:4"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/ShapeN:4"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1762
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Reshape_1_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/concat_grad/Slice_1"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup_grad/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup_grad/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup_grad/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup_grad/Shape"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup_grad/strided_slice/pack"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup_grad/strided_slice/pack_1"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup_grad/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup_grad/SparseSegmentMeanGrad"
  op: "SparseSegmentMeanGrad"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Reshape_1_grad/Reshape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Unique:1"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Cast"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/Size"
  op: "Size"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/Size"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/Shape"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/strided_slice/pack"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/strided_slice/pack_1"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/concat"
  op: "Concat"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/concat/concat_dim"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/ExpandDims"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup_grad/SparseSegmentMeanGrad"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/Unique"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Adagrad"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Adagrad"
  input: "Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Const_8"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Adagrad"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1043
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0/Adagrad"
  input: "Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Const_9"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Adagrad"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0/Adagrad"
  input: "Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Const_10"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Adagrad"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0/Adagrad"
  input: "Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Const_11"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Adagrad"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0/Adagrad"
  input: "Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Const_12"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Adagrad"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/logits/weights/part_0/Adagrad"
  input: "Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/logits/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_13"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Adagrad"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/logits/biases/part_0/Adagrad"
  input: "Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/logits/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adagrad_1/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "Adagrad_1/update_dnn/input_from_feature_columns/property_type_embedding/weights/part_0/SparseApplyAdagrad"
  op: "SparseApplyAdagrad"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Adagrad"
  input: "Adagrad_1/learning_rate"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/Reshape"
  input: "gradients_1/dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/embedding_lookup/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adagrad_1/update_dnn/hiddenlayer_0/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "dnn/hiddenlayer_0/weights/part_0/Adagrad"
  input: "Adagrad_1/learning_rate"
  input: "gradients_1/dnn/hiddenlayer_0/hiddenlayer_0/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adagrad_1/update_dnn/hiddenlayer_0/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "dnn/hiddenlayer_0/biases/part_0/Adagrad"
  input: "Adagrad_1/learning_rate"
  input: "gradients_1/dnn/hiddenlayer_0/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adagrad_1/update_dnn/hiddenlayer_1/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "dnn/hiddenlayer_1/weights/part_0/Adagrad"
  input: "Adagrad_1/learning_rate"
  input: "gradients_1/dnn/hiddenlayer_1/hiddenlayer_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adagrad_1/update_dnn/hiddenlayer_1/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "dnn/hiddenlayer_1/biases/part_0/Adagrad"
  input: "Adagrad_1/learning_rate"
  input: "gradients_1/dnn/hiddenlayer_1/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adagrad_1/update_dnn/logits/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/logits/weights/part_0"
  input: "dnn/logits/weights/part_0/Adagrad"
  input: "Adagrad_1/learning_rate"
  input: "gradients_1/dnn/logits/logits/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adagrad_1/update_dnn/logits/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/logits/biases/part_0"
  input: "dnn/logits/biases/part_0/Adagrad"
  input: "Adagrad_1/learning_rate"
  input: "gradients_1/dnn/logits/logits/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adagrad_1"
  op: "NoOp"
  input: "^Adagrad_1/update_dnn/input_from_feature_columns/property_type_embedding/weights/part_0/SparseApplyAdagrad"
  input: "^Adagrad_1/update_dnn/hiddenlayer_0/weights/part_0/ApplyAdagrad"
  input: "^Adagrad_1/update_dnn/hiddenlayer_0/biases/part_0/ApplyAdagrad"
  input: "^Adagrad_1/update_dnn/hiddenlayer_1/weights/part_0/ApplyAdagrad"
  input: "^Adagrad_1/update_dnn/hiddenlayer_1/biases/part_0/ApplyAdagrad"
  input: "^Adagrad_1/update_dnn/logits/weights/part_0/ApplyAdagrad"
  input: "^Adagrad_1/update_dnn/logits/biases/part_0/ApplyAdagrad"
}
node {
  name: "AssignAdd/value"
  op: "Const"
  input: "^Adagrad_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "AssignAdd"
  op: "AssignAdd"
  input: "global_step"
  input: "AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_0/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_0/biases/part_0/Assign"
  input: "^dnn/hiddenlayer_1/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_1/biases/part_0/Assign"
  input: "^dnn/logits/weights/part_0/Assign"
  input: "^dnn/logits/biases/part_0/Assign"
  input: "^centered_bias_weight/Assign"
  input: "^centered_bias_weight/Adagrad/Assign"
  input: "^dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Adagrad/Assign"
  input: "^dnn/hiddenlayer_0/weights/part_0/Adagrad/Assign"
  input: "^dnn/hiddenlayer_0/biases/part_0/Adagrad/Assign"
  input: "^dnn/hiddenlayer_1/weights/part_0/Adagrad/Assign"
  input: "^dnn/hiddenlayer_1/biases/part_0/Adagrad/Assign"
  input: "^dnn/logits/weights/part_0/Adagrad/Assign"
  input: "^dnn/logits/biases/part_0/Adagrad/Assign"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "centered_bias_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "centered_bias_weight/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "dnn/logits/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "dnn/logits/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/pack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  attr {
    key: "N"
    value {
      i: 17
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/pack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "global_step"
        string_val: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
        string_val: "dnn/hiddenlayer_0/weights/part_0"
        string_val: "dnn/hiddenlayer_0/biases/part_0"
        string_val: "dnn/hiddenlayer_1/weights/part_0"
        string_val: "dnn/hiddenlayer_1/biases/part_0"
        string_val: "dnn/logits/weights/part_0"
        string_val: "dnn/logits/biases/part_0"
        string_val: "centered_bias_weight"
        string_val: "centered_bias_weight/Adagrad"
        string_val: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_0/weights/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_0/biases/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/weights/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/biases/part_0/Adagrad"
        string_val: "dnn/logits/weights/part_0/Adagrad"
        string_val: "dnn/logits/biases/part_0/Adagrad"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 17
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "Concat"
  input: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
  input: "^dnn/input_from_feature_columns/input_from_feature_columns/property_type_embedding/lookup/table_init"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "ScalarSummary"
  input: "HistogramSummary"
  input: "ScalarSummary_1"
  input: "HistogramSummary_1"
  input: "ScalarSummary_2"
  input: "HistogramSummary_2"
  input: "ScalarSummary_3"
  input: "ScalarSummary_4"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/Const"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "centered_bias_weight"
        string_val: "centered_bias_weight/Adagrad"
        string_val: "dnn/hiddenlayer_0/biases"
        string_val: "dnn/hiddenlayer_0/biases/Adagrad"
        string_val: "dnn/hiddenlayer_0/weights"
        string_val: "dnn/hiddenlayer_0/weights/Adagrad"
        string_val: "dnn/hiddenlayer_1/biases"
        string_val: "dnn/hiddenlayer_1/biases/Adagrad"
        string_val: "dnn/hiddenlayer_1/weights"
        string_val: "dnn/hiddenlayer_1/weights/Adagrad"
        string_val: "dnn/input_from_feature_columns/property_type_embedding/weights"
        string_val: "dnn/input_from_feature_columns/property_type_embedding/weights/Adagrad"
        string_val: "dnn/logits/biases"
        string_val: "dnn/logits/biases/Adagrad"
        string_val: "dnn/logits/weights"
        string_val: "dnn/logits/weights/Adagrad"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: ""
        string_val: ""
        string_val: "10 0,10"
        string_val: "10 0,10"
        string_val: "1043 10 0,1043:0,10"
        string_val: "1043 10 0,1043:0,10"
        string_val: "10 0,10"
        string_val: "10 0,10"
        string_val: "10 10 0,10:0,10"
        string_val: "10 10 0,10:0,10"
        string_val: "6 10 0,6:0,10"
        string_val: "6 10 0,6:0,10"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "10 1 0,10:0,1"
        string_val: "10 1 0,10:0,1"
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/ShardedFilename"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "centered_bias_weight"
  input: "centered_bias_weight/Adagrad"
  input: "dnn/hiddenlayer_0/biases/part_0/read"
  input: "dnn/hiddenlayer_0/biases/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_0/weights/part_0/read"
  input: "dnn/hiddenlayer_0/weights/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_1/biases/part_0/read"
  input: "dnn/hiddenlayer_1/biases/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_1/weights/part_0/read"
  input: "dnn/hiddenlayer_1/weights/part_0/Adagrad/read"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/read"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Adagrad/read"
  input: "dnn/logits/biases/part_0/read"
  input: "dnn/logits/biases/part_0/Adagrad/read"
  input: "dnn/logits/weights/part_0/read"
  input: "dnn/logits/weights/part_0/Adagrad/read"
  input: "global_step"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/ShardedFilespec"
  op: "ShardedFilespec"
  input: "save/Const"
  input: "save/num_shards"
  input: "^save/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "centered_bias_weight"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "centered_bias_weight"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "centered_bias_weight/Adagrad"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "centered_bias_weight/Adagrad"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_0/biases"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "10 0,10"
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_0/biases/Adagrad"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "10 0,10"
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0/Adagrad"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_0/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1043 10 0,1043:0,10"
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_0/weights/Adagrad"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1043 10 0,1043:0,10"
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0/Adagrad"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1043
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_1/biases"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "10 0,10"
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_1/biases/Adagrad"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "10 0,10"
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0/Adagrad"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "10 10 0,10:0,10"
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_1/weights/Adagrad"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "10 10 0,10:0,10"
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0/Adagrad"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/input_from_feature_columns/property_type_embedding/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "6 10 0,6:0,10"
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/input_from_feature_columns/property_type_embedding/weights/Adagrad"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "6 10 0,6:0,10"
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "dnn/input_from_feature_columns/property_type_embedding/weights/part_0/Adagrad"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/property_type_embedding/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/logits/biases"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "dnn/logits/biases/part_0"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/logits/biases/Adagrad"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "dnn/logits/biases/part_0/Adagrad"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/logits/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "10 1 0,10:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "dnn/logits/weights/part_0"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/logits/weights/Adagrad"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "10 1 0,10:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "dnn/logits/weights/part_0/Adagrad"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 15
}
